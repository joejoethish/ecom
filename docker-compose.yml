version: '3.8'

services:
  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=ecommerce
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:8.11.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=devsecretkey
      - DJANGO_SETTINGS_MODULE=ecommerce_project.settings.development
      - DB_HOST=db
      - DB_NAME=ecommerce
      - DB_USER=postgres
      - DB_PASS=postgres
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy

  celery:
    build: ./backend
    command: celery -A ecommerce_project worker -l info
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - SECRET_KEY=devsecretkey
      - DJANGO_SETTINGS_MODULE=ecommerce_project.settings.development
      - DB_HOST=db
      - DB_NAME=ecommerce
      - DB_USER=postgres
      - DB_PASS=postgres
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
      - backend
      - redis

  celery-beat:
    build: ./backend
    command: celery -A ecommerce_project beat -l info
    volumes:
      - ./backend:/app
    environment:
      - DEBUG=1
      - SECRET_KEY=devsecretkey
      - DJANGO_SETTINGS_MODULE=ecommerce_project.settings.development
      - DB_HOST=db
      - DB_NAME=ecommerce
      - DB_USER=postgres
      - DB_PASS=postgres
      - REDIS_HOST=redis
      - ELASTICSEARCH_HOST=elasticsearch
    depends_on:
      - backend
      - redis

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000/api/v1
    depends_on:
      - backend

volumes:
  postgres_data:
  elasticsearch_data: