{
    "typescript.autoClosingTags": false,
    "kiroAgent.trustedCommands": [
        "python *",
        "npm *",
        "next *",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from django.urls import reverse; print('‚úì Testing admin authentication URL routing:'); print('‚úì Admin login URL:', reverse('admin_login')); print('‚úì Admin logout URL:', reverse('admin_logout')); print('‚úì Admin refresh URL:', reverse('admin_refresh')); print('‚úì All admin authentication URLs are properly configured!')\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from apps.authentication.views import AdminLoginAPIView, AdminLogoutAPIView, AdminTokenRefreshAPIView; print('‚úì Admin API views imported successfully'); from django.urls import reverse; print('‚úì URL patterns check complete')\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from django.urls import reverse; print('‚úì Testing admin auth URLs:'); print('  - admin_login:', reverse('admin_login')); print('  - admin_logout:', reverse('admin_logout')); print('  - admin_refresh:', reverse('admin_refresh'))\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from django.urls import reverse; print('‚úì Testing email verification URLs:'); print('  - verify_email_api:', reverse('verify_email_api', kwargs={'token': 'test123'})); print('  - resend_verification_api:', reverse('resend_verification_api'))\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); print('üîç Authentication System Status Check'); print('=' * 50); from apps.authentication.services import AuthenticationService, EmailVerificationService; print('‚úì Core Services: OK'); admin_methods = ['authenticate_admin_user', 'logout_admin_user', 'refresh_admin_token']; print('‚úì Admin Methods:'); [print(f'  - {method}: ‚úì') for method in admin_methods if hasattr(AuthenticationService, method)]; from apps.authentication.views import AdminLoginAPIView, EmailVerificationAPIView; print('‚úì API Views: OK'); from django.urls import reverse; print('‚úì URL Routing: OK'); print('üéâ Authentication System: FULLY OPERATIONAL')\"",
        "python -c \"from apps.authentication.views import UserManagementView, UserDetailView, UserSelfManagementView; print('Views imported successfully')\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from apps.authentication.views import UserManagementView, UserDetailView, UserSelfManagementView; print('Views imported successfully')\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from apps.authentication.serializers import UserListSerializer, AdminUserCreateSerializer, AdminUserUpdateSerializer, UserSelfDeleteSerializer; print('Serializers imported successfully')\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from django.urls import reverse; print('user_management:', reverse('user_management')); print('user_detail:', reverse('user_detail', kwargs={'user_id': 1})); print('user_self_management:', reverse('user_self_management')); print('URL patterns working correctly')\"",
        "python -c \"import os; os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ecommerce_project.settings.development'); import django; django.setup(); from django.urls import reverse; print('user_session_management:', reverse('user_session_management')); print('user_session_detail:', reverse('user_session_detail', kwargs={'session_id': 1})); print('Session URL patterns working correctly')\"",
        "python manage.py shell -c \"from django.contrib.auth import get_user_model; User = get_user_model(); print([f.name for f in User._meta.fields])\"",
        "python manage.py *",
        "python manage.py shell -c \"from django.db import connection; cursor = connection.cursor(); cursor.execute('DESCRIBE auth_user'); print([row for row in cursor.fetchall()])\""
    ]
}