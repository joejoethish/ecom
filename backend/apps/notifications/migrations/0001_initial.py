# Generated by Django 4.2.23 on 2025-08-25 06:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("SMS", "SMS"),
                            ("PUSH", "Push Notification"),
                            ("IN_APP", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("NORMAL", "Normal"),
                            ("HIGH", "High"),
                            ("URGENT", "Urgent"),
                        ],
                        default="NORMAL",
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("DELIVERED", "Delivered"),
                            ("READ", "Read"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField()),
                ("html_content", models.TextField(blank=True)),
                ("recipient_email", models.EmailField(blank=True, max_length=254)),
                ("recipient_phone", models.CharField(blank=True, max_length=15)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                (
                    "metadata",
                    models.JSONField(
                        default=dict, help_text="Additional data for template rendering"
                    ),
                ),
                (
                    "external_id",
                    models.CharField(
                        blank=True, help_text="External service ID", max_length=100
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "notifications",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("ORDER_CONFIRMATION", "Order Confirmation"),
                            ("ORDER_STATUS_UPDATE", "Order Status Update"),
                            ("PAYMENT_SUCCESS", "Payment Success"),
                            ("PAYMENT_FAILED", "Payment Failed"),
                            ("SHIPPING_UPDATE", "Shipping Update"),
                            ("DELIVERY_CONFIRMATION", "Delivery Confirmation"),
                            ("RETURN_REQUEST", "Return Request"),
                            ("REFUND_PROCESSED", "Refund Processed"),
                            ("INVENTORY_LOW", "Low Inventory Alert"),
                            ("WELCOME", "Welcome Message"),
                            ("PROMOTIONAL", "Promotional Offer"),
                            ("ACCOUNT_UPDATE", "Account Update"),
                            ("SECURITY_ALERT", "Security Alert"),
                            ("WISHLIST_PRICE_DROP", "Wishlist Price Drop"),
                            ("CART_ABANDONMENT", "Cart Abandonment"),
                            ("REVIEW_REQUEST", "Review Request"),
                            ("SELLER_VERIFICATION", "Seller Verification"),
                            ("SELLER_PAYOUT", "Seller Payout"),
                            ("CUSTOM", "Custom Template"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("SMS", "SMS"),
                            ("PUSH", "Push Notification"),
                            ("IN_APP", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "subject_template",
                    models.CharField(
                        help_text="Template for subject/title", max_length=200
                    ),
                ),
                (
                    "body_template",
                    models.TextField(
                        help_text="Template for message body with placeholders"
                    ),
                ),
                (
                    "html_template",
                    models.TextField(blank=True, help_text="HTML template for email"),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "notification_templates",
                "unique_together": {("template_type", "channel")},
            },
        ),
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action", models.CharField(max_length=50)),
                ("details", models.JSONField(default=dict)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "notification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.notification",
                    ),
                ),
            ],
            options={
                "db_table": "notification_logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="NotificationBatch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PROCESSING", "Processing"),
                            ("COMPLETED", "Completed"),
                            ("FAILED", "Failed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                (
                    "target_criteria",
                    models.JSONField(
                        default=dict, help_text="Criteria for selecting users"
                    ),
                ),
                ("total_recipients", models.PositiveIntegerField(default=0)),
                ("sent_count", models.PositiveIntegerField(default=0)),
                ("delivered_count", models.PositiveIntegerField(default=0)),
                ("failed_count", models.PositiveIntegerField(default=0)),
                ("scheduled_at", models.DateTimeField(blank=True, null=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_batches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_users",
                    models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="notifications.notificationtemplate",
                    ),
                ),
            ],
            options={
                "db_table": "notification_batches",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("template_type", models.CharField(max_length=50)),
                ("channel", models.CharField(max_length=20)),
                ("sent_count", models.PositiveIntegerField(default=0)),
                ("delivered_count", models.PositiveIntegerField(default=0)),
                ("read_count", models.PositiveIntegerField(default=0)),
                ("failed_count", models.PositiveIntegerField(default=0)),
                (
                    "delivery_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "read_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "failure_rate",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "notification_analytics",
                "ordering": ["-date"],
                "unique_together": {("date", "template_type", "channel")},
            },
        ),
        migrations.AddField(
            model_name="notification",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="notifications.notificationtemplate",
            ),
        ),
        migrations.AddField(
            model_name="notification",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("ORDER_UPDATES", "Order Updates"),
                            ("PAYMENT_UPDATES", "Payment Updates"),
                            ("SHIPPING_UPDATES", "Shipping Updates"),
                            ("PROMOTIONAL", "Promotional Offers"),
                            ("SECURITY", "Security Alerts"),
                            ("ACCOUNT", "Account Updates"),
                            ("INVENTORY", "Inventory Alerts"),
                            ("REVIEWS", "Review Requests"),
                            ("SELLER_UPDATES", "Seller Updates"),
                            ("GENERAL", "General Notifications"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("EMAIL", "Email"),
                            ("SMS", "SMS"),
                            ("PUSH", "Push Notification"),
                            ("IN_APP", "In-App Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notification_preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "notification_preferences",
                "unique_together": {("user", "notification_type", "channel")},
            },
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["user", "status"], name="notificatio_user_id_8ab96f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["channel", "status"], name="notificatio_channel_411e8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["scheduled_at"], name="notificatio_schedul_2a5c00_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notification",
            index=models.Index(
                fields=["created_at"], name="notificatio_created_e4c995_idx"
            ),
        ),
    ]
