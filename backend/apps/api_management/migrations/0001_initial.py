# Generated by Django 4.2.23 on 2025-08-25 06:05

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="APIDocumentation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("summary", models.CharField(blank=True, max_length=200)),
                ("description", models.TextField(blank=True)),
                ("parameters", models.JSONField(blank=True, default=list)),
                ("request_examples", models.JSONField(blank=True, default=list)),
                ("response_examples", models.JSONField(blank=True, default=list)),
                ("tags", models.JSONField(blank=True, default=list)),
                ("deprecated", models.BooleanField(default=False)),
                ("external_docs", models.URLField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="APIEndpoint",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("path", models.CharField(max_length=500)),
                (
                    "method",
                    models.CharField(
                        choices=[
                            ("GET", "GET"),
                            ("POST", "POST"),
                            ("PUT", "PUT"),
                            ("PATCH", "PATCH"),
                            ("DELETE", "DELETE"),
                            ("OPTIONS", "OPTIONS"),
                            ("HEAD", "HEAD"),
                        ],
                        max_length=10,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("request_schema", models.JSONField(blank=True, default=dict)),
                ("response_schema", models.JSONField(blank=True, default=dict)),
                ("examples", models.JSONField(blank=True, default=dict)),
                ("is_public", models.BooleanField(default=False)),
                ("requires_auth", models.BooleanField(default=True)),
                ("rate_limit_override", models.IntegerField(blank=True, null=True)),
                ("cache_ttl", models.IntegerField(default=0)),
                ("is_monitored", models.BooleanField(default=True)),
                ("alert_threshold", models.FloatField(default=5.0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["path", "method"],
            },
        ),
        migrations.CreateModel(
            name="APIKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("key", models.CharField(max_length=64, unique=True)),
                ("secret", models.CharField(max_length=128)),
                (
                    "environment",
                    models.CharField(
                        choices=[
                            ("development", "Development"),
                            ("staging", "Staging"),
                            ("production", "Production"),
                        ],
                        default="development",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("revoked", "Revoked"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("rate_limit_per_minute", models.IntegerField(default=1000)),
                ("rate_limit_per_hour", models.IntegerField(default=10000)),
                ("rate_limit_per_day", models.IntegerField(default=100000)),
                ("allowed_endpoints", models.JSONField(blank=True, default=list)),
                ("allowed_methods", models.JSONField(blank=True, default=list)),
                ("ip_whitelist", models.JSONField(blank=True, default=list)),
                ("description", models.TextField(blank=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("version", models.CharField(max_length=20, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_deprecated", models.BooleanField(default=False)),
                ("deprecation_date", models.DateTimeField(blank=True, null=True)),
                ("sunset_date", models.DateTimeField(blank=True, null=True)),
                ("changelog", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIWebhook",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("url", models.URLField()),
                ("events", models.JSONField(default=list)),
                ("is_active", models.BooleanField(default=True)),
                ("secret", models.CharField(blank=True, max_length=128)),
                ("timeout", models.IntegerField(default=30)),
                ("retry_count", models.IntegerField(default=3)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_triggered", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="APIWebhookDelivery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_type", models.CharField(max_length=50)),
                ("payload", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("success", "Success"),
                            ("failed", "Failed"),
                            ("retrying", "Retrying"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("response_code", models.IntegerField(blank=True, null=True)),
                ("response_body", models.TextField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                ("attempts", models.IntegerField(default=0)),
                ("next_retry", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                (
                    "webhook",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="api_management.apiwebhook",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIUsageLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("request_id", models.CharField(max_length=64, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("request_headers", models.JSONField(blank=True, default=dict)),
                ("request_body", models.TextField(blank=True)),
                ("status_code", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("error", "Error"),
                            ("timeout", "Timeout"),
                            ("rate_limited", "Rate Limited"),
                            ("unauthorized", "Unauthorized"),
                            ("forbidden", "Forbidden"),
                        ],
                        max_length=20,
                    ),
                ),
                ("response_time", models.FloatField()),
                ("response_size", models.IntegerField(default=0)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "api_key",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="api_management.apikey",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api_management.apiendpoint",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="APIRateLimit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requests_per_minute", models.IntegerField(default=0)),
                ("requests_per_hour", models.IntegerField(default=0)),
                ("requests_per_day", models.IntegerField(default=0)),
                ("minute_reset", models.DateTimeField()),
                ("hour_reset", models.DateTimeField()),
                ("day_reset", models.DateTimeField()),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "api_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api_management.apikey",
                    ),
                ),
                (
                    "endpoint",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api_management.apiendpoint",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="APIPerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("hour", models.IntegerField(blank=True, null=True)),
                ("request_count", models.IntegerField(default=0)),
                ("avg_response_time", models.FloatField(default=0.0)),
                ("min_response_time", models.FloatField(default=0.0)),
                ("max_response_time", models.FloatField(default=0.0)),
                ("error_count", models.IntegerField(default=0)),
                ("error_rate", models.FloatField(default=0.0)),
                ("status_2xx", models.IntegerField(default=0)),
                ("status_3xx", models.IntegerField(default=0)),
                ("status_4xx", models.IntegerField(default=0)),
                ("status_5xx", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="api_management.apiendpoint",
                    ),
                ),
            ],
            options={
                "ordering": ["-date", "-hour"],
            },
        ),
        migrations.CreateModel(
            name="APIMockService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("response_code", models.IntegerField(default=200)),
                ("response_body", models.TextField()),
                ("response_headers", models.JSONField(blank=True, default=dict)),
                ("delay", models.IntegerField(default=0)),
                ("conditions", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "endpoint",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="mocks",
                        to="api_management.apiendpoint",
                    ),
                ),
            ],
        ),
    ]
