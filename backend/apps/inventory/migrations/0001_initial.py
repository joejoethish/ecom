# Generated by Django 4.2.23 on 2025-08-25 06:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("orders", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Inventory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Available Quantity"
                    ),
                ),
                (
                    "reserved_quantity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Reserved Quantity"
                    ),
                ),
                (
                    "minimum_stock_level",
                    models.PositiveIntegerField(
                        default=10, verbose_name="Minimum Stock Level"
                    ),
                ),
                (
                    "maximum_stock_level",
                    models.PositiveIntegerField(
                        default=1000, verbose_name="Maximum Stock Level"
                    ),
                ),
                (
                    "reorder_point",
                    models.PositiveIntegerField(
                        default=20, verbose_name="Reorder Point"
                    ),
                ),
                (
                    "cost_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Cost Price"
                    ),
                ),
                (
                    "last_restocked",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Last Restocked"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory",
                "verbose_name_plural": "Inventories",
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "po_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="PO Number"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("DRAFT", "Draft"),
                            ("SUBMITTED", "Submitted"),
                            ("CONFIRMED", "Confirmed"),
                            ("PARTIAL", "Partially Received"),
                            ("RECEIVED", "Received"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="DRAFT",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "order_date",
                    models.DateField(auto_now_add=True, verbose_name="Order Date"),
                ),
                (
                    "expected_delivery_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Expected Delivery Date"
                    ),
                ),
                (
                    "actual_delivery_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Actual Delivery Date"
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Total Amount",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Tax Amount",
                    ),
                ),
                (
                    "shipping_cost",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        verbose_name="Shipping Cost",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_purchase_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Approved By",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_purchase_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order",
                "verbose_name_plural": "Purchase Orders",
                "ordering": ["-order_date"],
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Supplier Name"),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Supplier Code"
                    ),
                ),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Contact Person"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="Phone"),
                ),
                ("address", models.TextField(blank=True, verbose_name="Address")),
                ("website", models.URLField(blank=True, verbose_name="Website")),
                (
                    "lead_time_days",
                    models.PositiveIntegerField(
                        default=7, verbose_name="Lead Time (days)"
                    ),
                ),
                (
                    "reliability_rating",
                    models.DecimalField(
                        decimal_places=2,
                        default=5.0,
                        max_digits=3,
                        validators=[django.core.validators.MinValueValidator(0)],
                        verbose_name="Reliability Rating",
                    ),
                ),
                (
                    "payment_terms",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Payment Terms"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="USD", max_length=3, verbose_name="Currency"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Supplier",
                "verbose_name_plural": "Suppliers",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Warehouse Name"),
                ),
                (
                    "code",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Warehouse Code"
                    ),
                ),
                ("location", models.CharField(max_length=255, verbose_name="Location")),
                ("address", models.TextField(verbose_name="Address")),
                (
                    "contact_person",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Contact Person"
                    ),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="Email"),
                ),
                (
                    "phone",
                    models.CharField(blank=True, max_length=20, verbose_name="Phone"),
                ),
                (
                    "capacity",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Capacity (units)"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Warehouse",
                "verbose_name_plural": "Warehouses",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity_ordered",
                    models.PositiveIntegerField(verbose_name="Quantity Ordered"),
                ),
                (
                    "quantity_received",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Quantity Received"
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Unit Price"
                    ),
                ),
                (
                    "is_completed",
                    models.BooleanField(default=False, verbose_name="Completed"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchase_order_items",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.purchaseorder",
                        verbose_name="Purchase Order",
                    ),
                ),
            ],
            options={
                "verbose_name": "Purchase Order Item",
                "verbose_name_plural": "Purchase Order Items",
            },
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="supplier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="inventory.supplier",
                verbose_name="Supplier",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="inventory.warehouse",
                verbose_name="Warehouse",
            ),
        ),
        migrations.CreateModel(
            name="InventoryTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("PURCHASE", "Purchase"),
                            ("SALE", "Sale"),
                            ("RETURN", "Return"),
                            ("ADJUSTMENT", "Adjustment"),
                            ("TRANSFER", "Transfer"),
                            ("DAMAGED", "Damaged/Lost"),
                            ("EXPIRED", "Expired"),
                        ],
                        max_length=20,
                        verbose_name="Transaction Type",
                    ),
                ),
                ("quantity", models.IntegerField(verbose_name="Quantity Change")),
                (
                    "reference_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Reference Number"
                    ),
                ),
                (
                    "batch_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Batch Number"
                    ),
                ),
                (
                    "expiry_date",
                    models.DateField(blank=True, null=True, verbose_name="Expiry Date"),
                ),
                (
                    "unit_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Unit Cost",
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Total Cost",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inventory_transactions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "destination_warehouse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="incoming_transfers",
                        to="inventory.warehouse",
                        verbose_name="Destination Warehouse",
                    ),
                ),
                (
                    "inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="inventory.inventory",
                        verbose_name="Inventory",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inventory_transactions",
                        to="orders.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "source_warehouse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="outgoing_transfers",
                        to="inventory.warehouse",
                        verbose_name="Source Warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Transaction",
                "verbose_name_plural": "Inventory Transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="inventory",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="supplied_inventories",
                to="inventory.supplier",
                verbose_name="Supplier",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="inventories",
                to="inventory.warehouse",
                verbose_name="Warehouse",
            ),
        ),
        migrations.CreateModel(
            name="CycleCount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "count_name",
                    models.CharField(max_length=200, verbose_name="Count Name"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PLANNED", "Planned"),
                            ("IN_PROGRESS", "In Progress"),
                            ("COMPLETED", "Completed"),
                            ("CANCELLED", "Cancelled"),
                        ],
                        default="PLANNED",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                ("scheduled_date", models.DateField(verbose_name="Scheduled Date")),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Started At"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Completed At"
                    ),
                ),
                (
                    "count_all_products",
                    models.BooleanField(
                        default=False, verbose_name="Count All Products"
                    ),
                ),
                (
                    "total_items_counted",
                    models.IntegerField(default=0, verbose_name="Total Items Counted"),
                ),
                (
                    "items_with_variances",
                    models.IntegerField(default=0, verbose_name="Items with Variances"),
                ),
                (
                    "total_variance_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Total Variance Value",
                    ),
                ),
                (
                    "accuracy_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Accuracy Percentage",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_cycle_counts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigned To",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_cycle_counts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "product_categories",
                    models.ManyToManyField(
                        blank=True,
                        to="products.category",
                        verbose_name="Product Categories",
                    ),
                ),
                (
                    "specific_products",
                    models.ManyToManyField(
                        blank=True,
                        to="products.product",
                        verbose_name="Specific Products",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cycle_counts",
                        to="inventory.warehouse",
                        verbose_name="Warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cycle Count",
                "verbose_name_plural": "Cycle Counts",
            },
        ),
        migrations.CreateModel(
            name="InventoryKPI",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "kpi_type",
                    models.CharField(
                        choices=[
                            ("STOCK_TURNOVER", "Stock Turnover"),
                            ("FILL_RATE", "Fill Rate"),
                            ("STOCKOUT_RATE", "Stockout Rate"),
                            ("INVENTORY_ACCURACY", "Inventory Accuracy"),
                            ("CARRYING_COST_RATIO", "Carrying Cost Ratio"),
                            (
                                "GROSS_MARGIN_RETURN",
                                "Gross Margin Return on Investment",
                            ),
                            ("DEAD_STOCK_RATIO", "Dead Stock Ratio"),
                            ("BACKORDER_RATE", "Backorder Rate"),
                            ("SUPPLIER_LEAD_TIME", "Supplier Lead Time"),
                            ("INVENTORY_VELOCITY", "Inventory Velocity"),
                        ],
                        max_length=30,
                        verbose_name="KPI Type",
                    ),
                ),
                ("measurement_date", models.DateField(verbose_name="Measurement Date")),
                (
                    "value",
                    models.DecimalField(
                        decimal_places=4, max_digits=15, verbose_name="Value"
                    ),
                ),
                (
                    "target_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="Target Value",
                    ),
                ),
                (
                    "performance_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("EXCELLENT", "Excellent"),
                            ("GOOD", "Good"),
                            ("AVERAGE", "Average"),
                            ("POOR", "Poor"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Performance Status",
                    ),
                ),
                (
                    "previous_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="Previous Value",
                    ),
                ),
                (
                    "trend_direction",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("UP", "Improving"),
                            ("DOWN", "Declining"),
                            ("STABLE", "Stable"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Trend Direction",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kpis",
                        to="inventory.warehouse",
                        verbose_name="Warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory KPI",
                "verbose_name_plural": "Inventory KPIs",
                "indexes": [
                    models.Index(
                        fields=["kpi_type", "measurement_date"],
                        name="inventory_i_kpi_typ_f44b7d_idx",
                    ),
                    models.Index(
                        fields=["warehouse", "measurement_date"],
                        name="inventory_i_warehou_f329b8_idx",
                    ),
                ],
                "unique_together": {("warehouse", "kpi_type", "measurement_date")},
            },
        ),
        migrations.CreateModel(
            name="InventoryForecast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("forecast_date", models.DateField(verbose_name="Forecast Date")),
                (
                    "forecast_period_start",
                    models.DateField(verbose_name="Forecast Period Start"),
                ),
                (
                    "forecast_period_end",
                    models.DateField(verbose_name="Forecast Period End"),
                ),
                (
                    "forecast_method",
                    models.CharField(
                        choices=[
                            ("MOVING_AVERAGE", "Moving Average"),
                            ("EXPONENTIAL_SMOOTHING", "Exponential Smoothing"),
                            ("LINEAR_REGRESSION", "Linear Regression"),
                            ("SEASONAL_DECOMPOSITION", "Seasonal Decomposition"),
                            ("ARIMA", "ARIMA"),
                            ("MACHINE_LEARNING", "Machine Learning"),
                        ],
                        max_length=30,
                        verbose_name="Forecast Method",
                    ),
                ),
                (
                    "forecasted_demand",
                    models.IntegerField(verbose_name="Forecasted Demand"),
                ),
                (
                    "confidence_interval_lower",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Confidence Interval Lower"
                    ),
                ),
                (
                    "confidence_interval_upper",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Confidence Interval Upper"
                    ),
                ),
                (
                    "confidence_level",
                    models.DecimalField(
                        decimal_places=2,
                        default=95.0,
                        max_digits=5,
                        verbose_name="Confidence Level %",
                    ),
                ),
                (
                    "actual_demand",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Actual Demand"
                    ),
                ),
                (
                    "forecast_error",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Forecast Error"
                    ),
                ),
                (
                    "absolute_percentage_error",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Absolute Percentage Error",
                    ),
                ),
                (
                    "model_parameters",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Model Parameters"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forecasts",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="forecasts",
                        to="inventory.warehouse",
                        verbose_name="Warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Forecast",
                "verbose_name_plural": "Inventory Forecasts",
                "indexes": [
                    models.Index(
                        fields=["forecast_date", "forecast_method"],
                        name="inventory_i_forecas_e5b35f_idx",
                    ),
                    models.Index(
                        fields=["product", "warehouse"],
                        name="inventory_i_product_3ae884_idx",
                    ),
                    models.Index(
                        fields=["forecast_period_start", "forecast_period_end"],
                        name="inventory_i_forecas_c997b3_idx",
                    ),
                ],
                "unique_together": {
                    (
                        "product",
                        "warehouse",
                        "forecast_period_start",
                        "forecast_period_end",
                    )
                },
            },
        ),
        migrations.CreateModel(
            name="InventoryAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "analysis_type",
                    models.CharField(
                        choices=[
                            ("ABC", "ABC Analysis"),
                            ("TURNOVER", "Turnover Analysis"),
                            ("SEASONAL", "Seasonal Analysis"),
                            ("DEMAND_FORECAST", "Demand Forecasting"),
                            ("SHRINKAGE", "Shrinkage Analysis"),
                            ("CARRYING_COST", "Carrying Cost Analysis"),
                            ("REORDER_OPTIMIZATION", "Reorder Point Optimization"),
                            ("SUPPLIER_PERFORMANCE", "Supplier Performance"),
                            ("QUALITY_METRICS", "Quality Metrics"),
                            ("OBSOLESCENCE", "Obsolescence Analysis"),
                        ],
                        max_length=20,
                        verbose_name="Analysis Type",
                    ),
                ),
                ("analysis_date", models.DateField(verbose_name="Analysis Date")),
                (
                    "abc_category",
                    models.CharField(
                        blank=True, max_length=1, null=True, verbose_name="ABC Category"
                    ),
                ),
                (
                    "revenue_contribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Revenue Contribution %",
                    ),
                ),
                (
                    "turnover_ratio",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=10,
                        null=True,
                        verbose_name="Turnover Ratio",
                    ),
                ),
                (
                    "days_of_supply",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Days of Supply"
                    ),
                ),
                (
                    "forecasted_demand",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Forecasted Demand"
                    ),
                ),
                (
                    "forecast_accuracy",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Forecast Accuracy %",
                    ),
                ),
                (
                    "shrinkage_quantity",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Shrinkage Quantity"
                    ),
                ),
                (
                    "shrinkage_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Shrinkage Value",
                    ),
                ),
                (
                    "shrinkage_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Shrinkage Percentage",
                    ),
                ),
                (
                    "carrying_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Carrying Cost",
                    ),
                ),
                (
                    "carrying_cost_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Carrying Cost %",
                    ),
                ),
                (
                    "optimal_reorder_point",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Optimal Reorder Point"
                    ),
                ),
                (
                    "optimal_order_quantity",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Optimal Order Quantity"
                    ),
                ),
                (
                    "service_level",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Service Level %",
                    ),
                ),
                (
                    "defect_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Defect Rate %",
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        verbose_name="Quality Score",
                    ),
                ),
                (
                    "obsolescence_risk",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                        ],
                        max_length=10,
                        null=True,
                        verbose_name="Obsolescence Risk",
                    ),
                ),
                (
                    "days_since_last_sale",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Days Since Last Sale"
                    ),
                ),
                (
                    "additional_metrics",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Additional Metrics"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="inventory.warehouse",
                        verbose_name="Warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Analytics",
                "verbose_name_plural": "Inventory Analytics",
                "indexes": [
                    models.Index(
                        fields=["analysis_type", "analysis_date"],
                        name="inventory_i_analysi_9781dd_idx",
                    ),
                    models.Index(
                        fields=["product", "warehouse"],
                        name="inventory_i_product_7af96a_idx",
                    ),
                    models.Index(
                        fields=["abc_category"], name="inventory_i_abc_cat_b69a73_idx"
                    ),
                    models.Index(
                        fields=["turnover_ratio"], name="inventory_i_turnove_a65d6d_idx"
                    ),
                ],
                "unique_together": {
                    ("product", "warehouse", "analysis_type", "analysis_date")
                },
            },
        ),
        migrations.CreateModel(
            name="InventoryAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("LOW_STOCK", "Low Stock"),
                            ("OUT_OF_STOCK", "Out of Stock"),
                            ("OVERSTOCK", "Overstock"),
                            ("SLOW_MOVING", "Slow Moving"),
                            ("DEAD_STOCK", "Dead Stock"),
                            ("EXPIRY_WARNING", "Expiry Warning"),
                            ("QUALITY_ISSUE", "Quality Issue"),
                            ("SUPPLIER_DELAY", "Supplier Delay"),
                            ("COST_VARIANCE", "Cost Variance"),
                            ("FORECAST_DEVIATION", "Forecast Deviation"),
                        ],
                        max_length=20,
                        verbose_name="Alert Type",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=10,
                        verbose_name="Priority",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("ACKNOWLEDGED", "Acknowledged"),
                            ("RESOLVED", "Resolved"),
                            ("DISMISSED", "Dismissed"),
                        ],
                        default="ACTIVE",
                        max_length=15,
                        verbose_name="Status",
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="Title")),
                ("message", models.TextField(verbose_name="Message")),
                (
                    "threshold_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="Threshold Value",
                    ),
                ),
                (
                    "current_value",
                    models.DecimalField(
                        blank=True,
                        decimal_places=4,
                        max_digits=15,
                        null=True,
                        verbose_name="Current Value",
                    ),
                ),
                (
                    "recommended_action",
                    models.TextField(blank=True, verbose_name="Recommended Action"),
                ),
                (
                    "action_taken",
                    models.TextField(blank=True, verbose_name="Action Taken"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "acknowledged_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Acknowledged At"
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Resolved At"
                    ),
                ),
                (
                    "acknowledged_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="acknowledged_inventory_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Acknowledged By",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_inventory_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "inventory",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="inventory.inventory",
                        verbose_name="Inventory",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_inventory_alerts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Resolved By",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="alerts",
                        to="inventory.warehouse",
                        verbose_name="Warehouse",
                    ),
                ),
            ],
            options={
                "verbose_name": "Inventory Alert",
                "verbose_name_plural": "Inventory Alerts",
                "indexes": [
                    models.Index(
                        fields=["alert_type", "status"],
                        name="inventory_i_alert_t_346212_idx",
                    ),
                    models.Index(
                        fields=["priority", "created_at"],
                        name="inventory_i_priorit_712b62_idx",
                    ),
                    models.Index(
                        fields=["product", "warehouse"],
                        name="inventory_i_product_4a08a2_idx",
                    ),
                ],
            },
        ),
        migrations.AlterUniqueTogether(
            name="inventory",
            unique_together={("product", "warehouse")},
        ),
        migrations.CreateModel(
            name="CycleCountItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "system_quantity",
                    models.IntegerField(verbose_name="System Quantity"),
                ),
                (
                    "counted_quantity",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Counted Quantity"
                    ),
                ),
                (
                    "variance_quantity",
                    models.IntegerField(default=0, verbose_name="Variance Quantity"),
                ),
                (
                    "variance_value",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="Variance Value",
                    ),
                ),
                (
                    "counted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Counted At"
                    ),
                ),
                (
                    "variance_reason",
                    models.TextField(blank=True, verbose_name="Variance Reason"),
                ),
                (
                    "adjustment_made",
                    models.BooleanField(default=False, verbose_name="Adjustment Made"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "adjustment_transaction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="cycle_count_adjustments",
                        to="inventory.inventorytransaction",
                        verbose_name="Adjustment Transaction",
                    ),
                ),
                (
                    "counted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="counted_items",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Counted By",
                    ),
                ),
                (
                    "cycle_count",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.cyclecount",
                        verbose_name="Cycle Count",
                    ),
                ),
                (
                    "inventory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cycle_count_items",
                        to="inventory.inventory",
                        verbose_name="Inventory",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cycle Count Item",
                "verbose_name_plural": "Cycle Count Items",
                "unique_together": {("cycle_count", "inventory")},
            },
        ),
        migrations.AddIndex(
            model_name="cyclecount",
            index=models.Index(
                fields=["status", "scheduled_date"],
                name="inventory_c_status_6aa2ff_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="cyclecount",
            index=models.Index(
                fields=["warehouse", "status"], name="inventory_c_warehou_bc27e3_idx"
            ),
        ),
    ]
