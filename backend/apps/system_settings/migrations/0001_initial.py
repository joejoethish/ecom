# Generated by Django 4.2.23 on 2025-08-08 11:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SettingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('order', models.IntegerField(default=0)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subcategories', to='system_settings.settingcategory')),
            ],
            options={
                'verbose_name_plural': 'Setting Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(db_index=True, max_length=200, unique=True)),
                ('display_name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('data_type', models.CharField(choices=[('string', 'String'), ('integer', 'Integer'), ('float', 'Float'), ('boolean', 'Boolean'), ('json', 'JSON'), ('email', 'Email'), ('url', 'URL'), ('password', 'Password'), ('file', 'File'), ('color', 'Color'), ('date', 'Date'), ('datetime', 'DateTime')], default='string', max_length=20)),
                ('value', models.TextField()),
                ('default_value', models.TextField()),
                ('min_value', models.FloatField(blank=True, null=True)),
                ('max_value', models.FloatField(blank=True, null=True)),
                ('min_length', models.IntegerField(blank=True, null=True)),
                ('max_length', models.IntegerField(blank=True, null=True)),
                ('regex_pattern', models.CharField(blank=True, max_length=500)),
                ('allowed_values', models.JSONField(blank=True, null=True)),
                ('is_encrypted', models.BooleanField(default=False)),
                ('access_level', models.CharField(choices=[('public', 'Public'), ('admin', 'Admin Only'), ('superuser', 'Superuser Only'), ('role_based', 'Role Based')], default='admin', max_length=20)),
                ('allowed_roles', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_required', models.BooleanField(default=False)),
                ('requires_restart', models.BooleanField(default=False)),
                ('is_sensitive', models.BooleanField(default=False)),
                ('environment', models.CharField(default='production', max_length=50)),
                ('help_text', models.TextField(blank=True)),
                ('documentation_url', models.URLField(blank=True)),
                ('version', models.IntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='system_settings.settingcategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_settings', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category__order', 'display_name'],
            },
        ),
        migrations.CreateModel(
            name='SettingTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('description', models.TextField(blank=True)),
                ('template_data', models.JSONField()),
                ('is_public', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='system_settings.settingcategory')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='SettingNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('webhook', 'Webhook'), ('slack', 'Slack'), ('teams', 'Microsoft Teams')], max_length=20)),
                ('recipients', models.JSONField()),
                ('trigger_conditions', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='system_settings.systemsetting')),
            ],
        ),
        migrations.CreateModel(
            name='SettingEnvironmentSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_environment', models.CharField(max_length=50)),
                ('target_environment', models.CharField(max_length=50)),
                ('sync_status', models.CharField(choices=[('pending', 'Pending'), ('synced', 'Synced'), ('failed', 'Failed'), ('conflict', 'Conflict')], max_length=20)),
                ('last_sync_at', models.DateTimeField(blank=True, null=True)),
                ('sync_details', models.JSONField(default=dict)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environment_syncs', to='system_settings.systemsetting')),
            ],
        ),
        migrations.CreateModel(
            name='SettingDependency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dependency_type', models.CharField(choices=[('required', 'Required'), ('conditional', 'Conditional'), ('exclusive', 'Mutually Exclusive')], max_length=20)),
                ('condition', models.JSONField(blank=True, null=True)),
                ('depends_on', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependents', to='system_settings.systemsetting')),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dependencies', to='system_settings.systemsetting')),
            ],
        ),
        migrations.CreateModel(
            name='SettingChangeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_value', models.TextField(blank=True)),
                ('new_value', models.TextField()),
                ('version', models.IntegerField()),
                ('change_reason', models.TextField(blank=True)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('approval_status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='approved', max_length=20)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_changes', to=settings.AUTH_USER_MODEL)),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_history', to='system_settings.systemsetting')),
            ],
            options={
                'ordering': ['-changed_at'],
            },
        ),
        migrations.CreateModel(
            name='SettingBackup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('backup_data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('environment', models.CharField(max_length=50)),
                ('backup_type', models.CharField(choices=[('manual', 'Manual'), ('scheduled', 'Scheduled'), ('pre_change', 'Pre-Change')], default='manual', max_length=20)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SettingAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('view', 'Viewed'), ('export', 'Exported'), ('import', 'Imported')], max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('details', models.JSONField(default=dict)),
                ('compliance_flags', models.JSONField(default=list)),
                ('setting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='system_settings.systemsetting')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='systemsetting',
            index=models.Index(fields=['key'], name='system_sett_key_05d472_idx'),
        ),
        migrations.AddIndex(
            model_name='systemsetting',
            index=models.Index(fields=['category', 'is_active'], name='system_sett_categor_357a78_idx'),
        ),
        migrations.AddIndex(
            model_name='systemsetting',
            index=models.Index(fields=['environment'], name='system_sett_environ_616dcb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='settingenvironmentsync',
            unique_together={('setting', 'source_environment', 'target_environment')},
        ),
        migrations.AlterUniqueTogether(
            name='settingdependency',
            unique_together={('setting', 'depends_on')},
        ),
        migrations.AddIndex(
            model_name='settingchangehistory',
            index=models.Index(fields=['setting', '-changed_at'], name='system_sett_setting_cd1384_idx'),
        ),
        migrations.AddIndex(
            model_name='settingchangehistory',
            index=models.Index(fields=['changed_by', '-changed_at'], name='system_sett_changed_e1fb20_idx'),
        ),
        migrations.AddIndex(
            model_name='settingauditlog',
            index=models.Index(fields=['setting', '-timestamp'], name='system_sett_setting_07d306_idx'),
        ),
        migrations.AddIndex(
            model_name='settingauditlog',
            index=models.Index(fields=['user', '-timestamp'], name='system_sett_user_id_c99dd4_idx'),
        ),
        migrations.AddIndex(
            model_name='settingauditlog',
            index=models.Index(fields=['action', '-timestamp'], name='system_sett_action_6d1b3b_idx'),
        ),
    ]
