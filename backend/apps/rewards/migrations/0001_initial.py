# Generated by Django 4.2.23 on 2025-08-31 19:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerRewards",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("total_points_earned", models.PositiveIntegerField(default=0)),
                ("total_points_redeemed", models.PositiveIntegerField(default=0)),
                ("current_points", models.PositiveIntegerField(default=0)),
                (
                    "tier",
                    models.CharField(
                        choices=[
                            ("bronze", "Bronze"),
                            ("silver", "Silver"),
                            ("gold", "Gold"),
                            ("platinum", "Platinum"),
                        ],
                        default="bronze",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rewards",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Customer Rewards",
                "verbose_name_plural": "Customer Rewards",
            },
        ),
        migrations.CreateModel(
            name="RewardProgram",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "points_per_dollar",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "dollar_per_point",
                    models.DecimalField(decimal_places=4, default=0.01, max_digits=5),
                ),
                ("minimum_redemption_points", models.PositiveIntegerField(default=100)),
                (
                    "maximum_redemption_points",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("start_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("end_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Reward Program",
                "verbose_name_plural": "Reward Programs",
            },
        ),
        migrations.CreateModel(
            name="RewardTransaction",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("purchase", "Purchase"),
                            ("bonus", "Bonus"),
                            ("referral", "Referral"),
                            ("birthday", "Birthday"),
                            ("redemption", "Redemption"),
                            ("adjustment", "Adjustment"),
                            ("expiration", "Expiration"),
                        ],
                        max_length=20,
                    ),
                ),
                ("points", models.IntegerField()),
                ("description", models.CharField(max_length=255)),
                (
                    "reference_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "customer_rewards",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="rewards.customerrewards",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reward Transaction",
                "verbose_name_plural": "Reward Transactions",
                "ordering": ["-created_at"],
            },
        ),
    ]
