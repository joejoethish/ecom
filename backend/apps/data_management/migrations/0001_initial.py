# Generated migration for data_management app

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataImportJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file_path', models.CharField(max_length=500)),
                ('file_format', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('xml', 'XML'), ('yaml', 'YAML')], max_length=20)),
                ('file_size', models.BigIntegerField()),
                ('target_model', models.CharField(max_length=100)),
                ('mapping_config', models.JSONField(default=dict)),
                ('validation_rules', models.JSONField(default=dict)),
                ('transformation_rules', models.JSONField(default=dict)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('error_log', models.JSONField(default=list)),
                ('validation_errors', models.JSONField(default=list)),
                ('processing_log', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('skip_duplicates', models.BooleanField(default=True)),
                ('update_existing', models.BooleanField(default=False)),
                ('batch_size', models.IntegerField(default=1000)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='import_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_import_jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataExportJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('source_model', models.CharField(max_length=100)),
                ('export_format', models.CharField(choices=[('csv', 'CSV'), ('excel', 'Excel'), ('json', 'JSON'), ('xml', 'XML'), ('yaml', 'YAML'), ('pdf', 'PDF')], max_length=20)),
                ('field_mapping', models.JSONField(default=dict)),
                ('filter_criteria', models.JSONField(default=dict)),
                ('sort_criteria', models.JSONField(default=list)),
                ('file_path', models.CharField(blank=True, max_length=500)),
                ('file_size', models.BigIntegerField(default=0)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('total_records', models.IntegerField(default=0)),
                ('exported_records', models.IntegerField(default=0)),
                ('error_log', models.JSONField(default=list)),
                ('processing_log', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('include_headers', models.BooleanField(default=True)),
                ('compress_output', models.BooleanField(default=False)),
                ('encrypt_output', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='export_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_export_jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataMapping',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('target_model', models.CharField(max_length=100)),
                ('field_mappings', models.JSONField(default=dict)),
                ('default_values', models.JSONField(default=dict)),
                ('transformation_rules', models.JSONField(default=dict)),
                ('validation_rules', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_mappings',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DataSyncJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('source_type', models.CharField(max_length=50)),
                ('source_config', models.JSONField(default=dict)),
                ('target_model', models.CharField(max_length=100)),
                ('frequency', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('schedule_config', models.JSONField(default=dict)),
                ('mapping_config', models.JSONField(default=dict)),
                ('sync_mode', models.CharField(default='incremental', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('disabled', 'Disabled')], default='active', max_length=20)),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('next_run_at', models.DateTimeField(blank=True, null=True)),
                ('last_run_status', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_sync_jobs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DataBackup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('backup_type', models.CharField(choices=[('full', 'Full Backup'), ('incremental', 'Incremental Backup'), ('differential', 'Differential Backup')], max_length=20)),
                ('models_to_backup', models.JSONField(default=list)),
                ('backup_path', models.CharField(max_length=500)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('progress_percentage', models.IntegerField(default=0)),
                ('file_size', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('compress_backup', models.BooleanField(default=True)),
                ('encrypt_backup', models.BooleanField(default=False)),
                ('retention_days', models.IntegerField(default=30)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_backups',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DataAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('import', 'Import'), ('export', 'Export'), ('sync', 'Sync'), ('backup', 'Backup'), ('restore', 'Restore'), ('transform', 'Transform'), ('validate', 'Validate')], max_length=20)),
                ('operation_id', models.UUIDField()),
                ('object_id', models.CharField(blank=True, max_length=100, null=True)),
                ('changes', models.JSONField(default=dict)),
                ('old_values', models.JSONField(default=dict)),
                ('new_values', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_audit_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DataQualityRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('rule_type', models.CharField(choices=[('required', 'Required Field'), ('format', 'Format Validation'), ('range', 'Range Validation'), ('unique', 'Uniqueness Check'), ('reference', 'Reference Integrity'), ('custom', 'Custom Rule')], max_length=20)),
                ('target_model', models.CharField(max_length=100)),
                ('target_field', models.CharField(max_length=100)),
                ('rule_config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('severity', models.CharField(default='error', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_quality_rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DataLineage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(max_length=50)),
                ('source_name', models.CharField(max_length=200)),
                ('source_field', models.CharField(blank=True, max_length=100)),
                ('target_type', models.CharField(max_length=50)),
                ('target_name', models.CharField(max_length=200)),
                ('target_field', models.CharField(blank=True, max_length=100)),
                ('transformation_type', models.CharField(blank=True, max_length=50)),
                ('transformation_config', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'data_lineage',
                'ordering': ['source_name', 'target_name'],
            },
        ),
        migrations.AddIndex(
            model_name='dataauditlog',
            index=models.Index(fields=['action', 'timestamp'], name='data_audit__action_b8e8e5_idx'),
        ),
        migrations.AddIndex(
            model_name='dataauditlog',
            index=models.Index(fields=['content_type', 'object_id'], name='data_audit__content_c8b8e5_idx'),
        ),
        migrations.AddIndex(
            model_name='dataauditlog',
            index=models.Index(fields=['operation_id'], name='data_audit__operati_c8b8e5_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='datalineage',
            unique_together={('source_name', 'source_field', 'target_name', 'target_field')},
        ),
    ]