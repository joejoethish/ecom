# Generated by Django 4.2.23 on 2025-08-07 06:12

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('orders', '__first__'),
        ('customers', '0001_initial'),
        ('products', '0002_productrating'),
    ]

    operations = [
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('internal_notes', models.TextField(blank=True)),
                ('promotion_type', models.CharField(choices=[('percentage', 'Percentage Discount'), ('fixed_amount', 'Fixed Amount Discount'), ('bogo', 'Buy One Get One'), ('free_shipping', 'Free Shipping'), ('bundle', 'Bundle Discount'), ('tiered', 'Tiered Discount'), ('dynamic', 'Dynamic Pricing')], max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending_approval', 'Pending Approval'), ('approved', 'Approved'), ('active', 'Active'), ('paused', 'Paused'), ('expired', 'Expired'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Maximum discount amount for percentage discounts', max_digits=10, null=True)),
                ('buy_quantity', models.PositiveIntegerField(default=1, help_text='Buy X items')),
                ('get_quantity', models.PositiveIntegerField(default=1, help_text='Get Y items')),
                ('get_discount_percentage', models.DecimalField(decimal_places=2, default=100, help_text="Discount percentage for 'get' items (100% = free)", max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('usage_limit_total', models.PositiveIntegerField(blank=True, help_text='Total number of times this promotion can be used', null=True)),
                ('usage_limit_per_customer', models.PositiveIntegerField(blank=True, help_text='Number of times each customer can use this promotion', null=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('minimum_order_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('minimum_quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('target_type', models.CharField(choices=[('all_customers', 'All Customers'), ('customer_segment', 'Customer Segment'), ('specific_customers', 'Specific Customers'), ('new_customers', 'New Customers'), ('returning_customers', 'Returning Customers'), ('vip_customers', 'VIP Customers')], max_length=20)),
                ('target_customer_segments', models.JSONField(blank=True, default=list)),
                ('target_customer_ids', models.JSONField(blank=True, default=list)),
                ('allowed_channels', models.JSONField(blank=True, default=list)),
                ('can_stack_with_other_promotions', models.BooleanField(default=False)),
                ('stackable_promotion_types', models.JSONField(blank=True, default=list)),
                ('excluded_promotion_ids', models.JSONField(blank=True, default=list)),
                ('priority', models.PositiveIntegerField(default=1, help_text='Higher numbers have higher priority')),
                ('is_ab_test', models.BooleanField(default=False)),
                ('ab_test_group', models.CharField(blank=True, max_length=10)),
                ('ab_test_traffic_percentage', models.DecimalField(decimal_places=2, default=100, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('requires_approval', models.BooleanField(default=False)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('budget_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('budget_spent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, help_text='Conversion rate percentage', max_digits=5)),
                ('roi', models.DecimalField(decimal_places=2, default=0, help_text='Return on Investment', max_digits=8)),
                ('fraud_score', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_flagged_for_review', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_promotions', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_promotions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'promotions_promotion',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromotionTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=50)),
                ('template_data', models.JSONField(help_text='JSON configuration for the promotion')),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'promotions_template',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50, unique=True)),
                ('is_single_use', models.BooleanField(default=False)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('usage_limit', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coupons', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_coupon',
            },
        ),
        migrations.CreateModel(
            name='PromotionUsage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('original_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('final_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('channel', models.CharField(choices=[('website', 'Website'), ('mobile_app', 'Mobile App'), ('email', 'Email Campaign'), ('sms', 'SMS Campaign'), ('social_media', 'Social Media'), ('affiliate', 'Affiliate'), ('in_store', 'In Store')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('fraud_reasons', models.JSONField(blank=True, default=list)),
                ('used_at', models.DateTimeField(auto_now_add=True)),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='promotions.coupon')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='customers.customerprofile')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orders.order')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_usage',
                'indexes': [models.Index(fields=['promotion', 'customer'], name='promotions__promoti_542070_idx'), models.Index(fields=['used_at'], name='promotions__used_at_e46e34_idx'), models.Index(fields=['is_suspicious'], name='promotions__is_susp_5a1e23_idx')],
            },
        ),
        migrations.CreateModel(
            name='PromotionSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('activate', 'Activate'), ('deactivate', 'Deactivate'), ('pause', 'Pause'), ('resume', 'Resume')], max_length=20)),
                ('scheduled_time', models.DateTimeField()),
                ('is_executed', models.BooleanField(default=False)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('execution_result', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_schedule',
                'indexes': [models.Index(fields=['scheduled_time', 'is_executed'], name='promotions__schedul_56ba97_idx')],
            },
        ),
        migrations.CreateModel(
            name='PromotionProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_included', models.BooleanField(default=True, help_text='True for included, False for excluded')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_products', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_promotion_product',
                'unique_together': {('promotion', 'product')},
            },
        ),
        migrations.CreateModel(
            name='PromotionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_included', models.BooleanField(default=True, help_text='True for included, False for excluded')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.category')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promotion_categories', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_promotion_category',
                'unique_together': {('promotion', 'category')},
            },
        ),
        migrations.CreateModel(
            name='PromotionAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Created'), ('updated', 'Updated'), ('activated', 'Activated'), ('deactivated', 'Deactivated'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('deleted', 'Deleted')], max_length=20)),
                ('changes', models.JSONField(blank=True, default=dict)),
                ('old_values', models.JSONField(blank=True, default=dict)),
                ('new_values', models.JSONField(blank=True, default=dict)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='promotions.promotion')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'promotions_audit_log',
                'indexes': [models.Index(fields=['promotion', 'timestamp'], name='promotions__promoti_6aba4f_idx'), models.Index(fields=['user', 'timestamp'], name='promotions__user_id_e9a13b_idx'), models.Index(fields=['action'], name='promotions__action_91eede_idx')],
            },
        ),
        migrations.CreateModel(
            name='PromotionApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('changes_requested', 'Changes Requested')], max_length=20)),
                ('comments', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_approval',
                'unique_together': {('promotion', 'approver')},
            },
        ),
        migrations.CreateModel(
            name='PromotionAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_uses', models.PositiveIntegerField(default=0)),
                ('unique_customers', models.PositiveIntegerField(default=0)),
                ('total_discount_given', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_revenue_generated', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('click_through_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('channel_breakdown', models.JSONField(blank=True, default=dict)),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='promotions.promotion')),
            ],
            options={
                'db_table': 'promotions_analytics',
                'indexes': [models.Index(fields=['date'], name='promotions__date_f981bc_idx'), models.Index(fields=['promotion', 'date'], name='promotions__promoti_fe5a78_idx')],
                'unique_together': {('promotion', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['status', 'start_date', 'end_date'], name='promotions__status_01e07b_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['promotion_type'], name='promotions__promoti_f59ec4_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['target_type'], name='promotions__target__dcc3d0_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['priority'], name='promotions__priorit_5260ee_idx'),
        ),
        migrations.AddIndex(
            model_name='promotion',
            index=models.Index(fields=['created_at'], name='promotions__created_dcd10a_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['code'], name='promotions__code_acae7b_idx'),
        ),
        migrations.AddIndex(
            model_name='coupon',
            index=models.Index(fields=['is_active'], name='promotions__is_acti_8daf39_idx'),
        ),
    ]
