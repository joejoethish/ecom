# Generated by Django 4.2.23 on 2025-08-25 06:05

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("po_number", models.CharField(max_length=50, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("pending_approval", "Pending Approval"),
                            ("approved", "Approved"),
                            ("sent", "Sent to Supplier"),
                            ("acknowledged", "Acknowledged"),
                            ("in_progress", "In Progress"),
                            ("partially_received", "Partially Received"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                ("required_date", models.DateField()),
                ("expected_delivery_date", models.DateField(blank=True, null=True)),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "shipping_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("notes", models.TextField(blank=True)),
                ("terms_and_conditions", models.TextField(blank=True)),
                ("approved_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="approved_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_pos",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("supplier_code", models.CharField(max_length=50, unique=True)),
                ("company_name", models.CharField(max_length=200)),
                ("legal_name", models.CharField(blank=True, max_length=200)),
                (
                    "supplier_type",
                    models.CharField(
                        choices=[
                            ("manufacturer", "Manufacturer"),
                            ("distributor", "Distributor"),
                            ("wholesaler", "Wholesaler"),
                            ("service_provider", "Service Provider"),
                            ("dropshipper", "Dropshipper"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("pending", "Pending Approval"),
                            ("suspended", "Suspended"),
                            ("blacklisted", "Blacklisted"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("primary_contact_name", models.CharField(max_length=100)),
                ("primary_contact_email", models.EmailField(max_length=254)),
                ("primary_contact_phone", models.CharField(max_length=20)),
                (
                    "secondary_contact_name",
                    models.CharField(blank=True, max_length=100),
                ),
                (
                    "secondary_contact_email",
                    models.EmailField(blank=True, max_length=254),
                ),
                (
                    "secondary_contact_phone",
                    models.CharField(blank=True, max_length=20),
                ),
                ("address_line1", models.CharField(max_length=200)),
                ("address_line2", models.CharField(blank=True, max_length=200)),
                ("city", models.CharField(max_length=100)),
                ("state", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                ("country", models.CharField(max_length=100)),
                ("tax_id", models.CharField(blank=True, max_length=50)),
                ("business_license", models.CharField(blank=True, max_length=100)),
                ("website", models.URLField(blank=True)),
                ("established_year", models.IntegerField(blank=True, null=True)),
                ("employee_count", models.IntegerField(blank=True, null=True)),
                (
                    "annual_revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "performance_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "quality_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "delivery_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "reliability_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                            ("critical", "Critical Risk"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                (
                    "financial_stability_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                (
                    "compliance_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("payment_terms_days", models.IntegerField(default=30)),
                (
                    "credit_limit",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("is_minority_owned", models.BooleanField(default=False)),
                ("is_women_owned", models.BooleanField(default=False)),
                ("is_veteran_owned", models.BooleanField(default=False)),
                ("is_small_business", models.BooleanField(default=False)),
                (
                    "sustainability_score",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=3,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("esg_compliance", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_audit_date", models.DateTimeField(blank=True, null=True)),
                ("next_audit_date", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["company_name"],
            },
        ),
        migrations.CreateModel(
            name="SupplierCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name_plural": "Supplier Categories",
            },
        ),
        migrations.CreateModel(
            name="SupplierDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("business_license", "Business License"),
                            ("tax_certificate", "Tax Certificate"),
                            ("insurance", "Insurance Certificate"),
                            ("quality_certificate", "Quality Certificate"),
                            ("contract", "Contract"),
                            ("audit_report", "Audit Report"),
                            ("financial_statement", "Financial Statement"),
                            ("compliance_certificate", "Compliance Certificate"),
                            ("other", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("file", models.FileField(upload_to="supplier_documents/")),
                ("description", models.TextField(blank=True)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("is_verified", models.BooleanField(default=False)),
                ("verified_at", models.DateTimeField(blank=True, null=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="suppliers.supplier",
                    ),
                ),
                (
                    "verified_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupplierContract",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        choices=[
                            ("supply_agreement", "Supply Agreement"),
                            ("service_agreement", "Service Agreement"),
                            ("nda", "Non-Disclosure Agreement"),
                            ("master_agreement", "Master Service Agreement"),
                            ("purchase_agreement", "Purchase Agreement"),
                        ],
                        max_length=30,
                    ),
                ),
                ("contract_number", models.CharField(max_length=50, unique=True)),
                ("title", models.CharField(max_length=200)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("under_review", "Under Review"),
                            ("active", "Active"),
                            ("expired", "Expired"),
                            ("terminated", "Terminated"),
                            ("renewed", "Renewed"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("renewal_date", models.DateField(blank=True, null=True)),
                (
                    "contract_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                ("payment_terms", models.CharField(blank=True, max_length=100)),
                (
                    "contract_file",
                    models.FileField(blank=True, upload_to="supplier_contracts/"),
                ),
                ("terms_and_conditions", models.TextField(blank=True)),
                ("special_terms", models.TextField(blank=True)),
                ("auto_renewal", models.BooleanField(default=False)),
                ("renewal_notice_days", models.IntegerField(default=30)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contracts",
                        to="suppliers.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupplierContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_type",
                    models.CharField(
                        choices=[
                            ("sales", "Sales"),
                            ("technical", "Technical"),
                            ("finance", "Finance"),
                            ("quality", "Quality"),
                            ("logistics", "Logistics"),
                            ("management", "Management"),
                        ],
                        max_length=20,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("title", models.CharField(blank=True, max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone", models.CharField(blank=True, max_length=20)),
                ("mobile", models.CharField(blank=True, max_length=20)),
                ("is_primary", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="suppliers.supplier",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupplierCommunication",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "communication_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("phone", "Phone Call"),
                            ("meeting", "Meeting"),
                            ("video_call", "Video Call"),
                            ("message", "Internal Message"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("requires_follow_up", models.BooleanField(default=False)),
                ("follow_up_date", models.DateField(blank=True, null=True)),
                ("is_resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "internal_contact",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="communications",
                        to="suppliers.supplier",
                    ),
                ),
                (
                    "supplier_contact",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="suppliers.suppliercontact",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SupplierAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "audit_type",
                    models.CharField(
                        choices=[
                            ("quality", "Quality Audit"),
                            ("financial", "Financial Audit"),
                            ("compliance", "Compliance Audit"),
                            ("performance", "Performance Review"),
                            ("sustainability", "Sustainability Audit"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                ("scheduled_date", models.DateField()),
                ("completed_date", models.DateField(blank=True, null=True)),
                (
                    "overall_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("findings", models.TextField(blank=True)),
                ("recommendations", models.TextField(blank=True)),
                ("corrective_actions", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "auditor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audits",
                        to="suppliers.supplier",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="supplier",
            name="category",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="suppliers.suppliercategory",
            ),
        ),
        migrations.CreateModel(
            name="PurchaseOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("product_name", models.CharField(max_length=200)),
                ("product_sku", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "quantity_ordered",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "quantity_received",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=12)),
                ("expected_delivery_date", models.DateField(blank=True, null=True)),
                ("actual_delivery_date", models.DateField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="suppliers.purchaseorder",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="supplier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="suppliers.supplier",
            ),
        ),
        migrations.CreateModel(
            name="SupplierPerformanceMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("metric_date", models.DateField()),
                (
                    "on_time_delivery_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "average_delivery_days",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "defect_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "return_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("total_orders", models.IntegerField(default=0)),
                (
                    "total_value",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "average_order_value",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=10),
                ),
                (
                    "response_time_hours",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                (
                    "issue_resolution_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="performance_history",
                        to="suppliers.supplier",
                    ),
                ),
            ],
            options={
                "ordering": ["-metric_date"],
                "unique_together": {("supplier", "metric_date")},
            },
        ),
    ]
