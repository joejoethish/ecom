# Generated by Django 4.2.23 on 2025-08-25 06:05

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomerSegment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "segment_type",
                    models.CharField(
                        choices=[
                            ("high_value", "High Value"),
                            ("frequent_buyer", "Frequent Buyer"),
                            ("at_risk", "At Risk"),
                            ("new_customer", "New Customer"),
                            ("loyal", "Loyal Customer"),
                            ("dormant", "Dormant"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("criteria", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "db_table": "analytics_customer_segments",
            },
        ),
        migrations.CreateModel(
            name="CustomerRiskAssessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "overall_risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "risk_level",
                    models.CharField(
                        choices=[
                            ("very_low", "Very Low Risk"),
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                            ("very_high", "Very High Risk"),
                        ],
                        default="low",
                        max_length=20,
                    ),
                ),
                (
                    "fraud_risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "payment_risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "chargeback_risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "return_abuse_risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("suspicious_activities", models.JSONField(default=list)),
                ("risk_factors", models.JSONField(default=dict)),
                ("protective_factors", models.JSONField(default=dict)),
                ("unusual_purchase_patterns", models.BooleanField(default=False)),
                ("velocity_violations", models.BooleanField(default=False)),
                ("geographic_anomalies", models.BooleanField(default=False)),
                ("device_fingerprint_changes", models.BooleanField(default=False)),
                ("total_chargebacks", models.IntegerField(default=0)),
                ("total_returns", models.IntegerField(default=0)),
                ("failed_payment_attempts", models.IntegerField(default=0)),
                ("account_age_days", models.IntegerField(default=0)),
                (
                    "monitoring_level",
                    models.CharField(
                        choices=[
                            ("none", "No Monitoring"),
                            ("basic", "Basic Monitoring"),
                            ("enhanced", "Enhanced Monitoring"),
                            ("strict", "Strict Monitoring"),
                        ],
                        default="basic",
                        max_length=20,
                    ),
                ),
                ("restrictions_applied", models.JSONField(default=list)),
                ("manual_review_required", models.BooleanField(default=False)),
                ("last_assessment", models.DateTimeField(auto_now=True)),
                ("next_assessment_due", models.DateTimeField(blank=True, null=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="risk_assessment",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_risk",
            },
        ),
        migrations.CreateModel(
            name="CustomerProfitabilityAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "gross_revenue",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "net_revenue",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "acquisition_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "service_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "retention_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "gross_profit",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "net_profit",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "profit_margin",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("profitability_rank", models.IntegerField(blank=True, null=True)),
                (
                    "profitability_percentile",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("monthly_profit_trend", models.JSONField(default=list)),
                ("quarterly_profit_trend", models.JSONField(default=list)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profitability",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_profitability",
            },
        ),
        migrations.CreateModel(
            name="CustomerPreferenceAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("preferred_categories", models.JSONField(default=list)),
                ("preferred_brands", models.JSONField(default=list)),
                ("preferred_price_range", models.JSONField(default=dict)),
                ("preferred_attributes", models.JSONField(default=dict)),
                ("preferred_shopping_times", models.JSONField(default=list)),
                ("preferred_channels", models.JSONField(default=list)),
                ("preferred_payment_methods", models.JSONField(default=list)),
                ("preferred_shipping_methods", models.JSONField(default=list)),
                (
                    "communication_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("never", "Never"),
                        ],
                        default="weekly",
                        max_length=20,
                    ),
                ),
                ("preferred_communication_channels", models.JSONField(default=list)),
                ("collaborative_filtering_data", models.JSONField(default=dict)),
                ("content_based_data", models.JSONField(default=dict)),
                ("hybrid_model_data", models.JSONField(default=dict)),
                (
                    "category_confidence",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "brand_confidence",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "price_confidence",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_preferences",
            },
        ),
        migrations.CreateModel(
            name="CustomerLifetimeValue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "historical_clv",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "predicted_clv",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "purchase_frequency",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.0000"), max_digits=8
                    ),
                ),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "customer_lifespan",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "gross_margin_per_order",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "customer_acquisition_cost",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "engagement_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "loyalty_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "prediction_confidence",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("model_version", models.CharField(default="v1.0", max_length=20)),
                ("calculated_at", models.DateTimeField(auto_now=True)),
                ("next_calculation_due", models.DateTimeField(blank=True, null=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="clv_data",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_lifetime_value",
            },
        ),
        migrations.CreateModel(
            name="CustomerEngagementScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "website_engagement",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "email_engagement",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "social_engagement",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "purchase_engagement",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "support_engagement",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "session_frequency",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "avg_session_duration",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "page_views_per_session",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                (
                    "bounce_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "email_open_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "email_click_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "sms_response_rate",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "engagement_trend",
                    models.CharField(
                        choices=[
                            ("increasing", "Increasing"),
                            ("stable", "Stable"),
                            ("decreasing", "Decreasing"),
                            ("volatile", "Volatile"),
                        ],
                        default="stable",
                        max_length=20,
                    ),
                ),
                ("calculated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="engagement",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_engagement",
            },
        ),
        migrations.CreateModel(
            name="CustomerDemographicAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=100)),
                ("state", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                ("timezone", models.CharField(blank=True, max_length=50)),
                (
                    "age_group",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("18-24", "18-24"),
                            ("25-34", "25-34"),
                            ("35-44", "35-44"),
                            ("45-54", "45-54"),
                            ("55-64", "55-64"),
                            ("65+", "65+"),
                        ],
                        max_length=20,
                    ),
                ),
                ("gender", models.CharField(blank=True, max_length=10)),
                (
                    "income_bracket",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("low", "Low Income"),
                            ("middle", "Middle Income"),
                            ("high", "High Income"),
                            ("premium", "Premium Income"),
                        ],
                        max_length=20,
                    ),
                ),
                ("lifestyle_segments", models.JSONField(default=list)),
                ("interests", models.JSONField(default=list)),
                ("values", models.JSONField(default=list)),
                ("personality_traits", models.JSONField(default=dict)),
                (
                    "shopping_personality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("bargain_hunter", "Bargain Hunter"),
                            ("brand_loyalist", "Brand Loyalist"),
                            ("convenience_shopper", "Convenience Shopper"),
                            ("research_oriented", "Research Oriented"),
                            ("impulse_buyer", "Impulse Buyer"),
                            ("quality_seeker", "Quality Seeker"),
                        ],
                        max_length=30,
                    ),
                ),
                ("device_preferences", models.JSONField(default=list)),
                (
                    "tech_savviness",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("data_sources", models.JSONField(default=list)),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demographics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_demographics",
            },
        ),
        migrations.CreateModel(
            name="CustomerCohort",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("cohort_date", models.DateField()),
                ("description", models.TextField(blank=True)),
                ("initial_customers", models.IntegerField(default=0)),
                ("current_active_customers", models.IntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "average_customer_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "analytics_customer_cohorts",
                "unique_together": {("cohort_date",)},
            },
        ),
        migrations.CreateModel(
            name="CustomerChurnPrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "churn_probability",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.0000"), max_digits=5
                    ),
                ),
                (
                    "churn_risk_level",
                    models.CharField(
                        choices=[
                            ("low", "Low Risk"),
                            ("medium", "Medium Risk"),
                            ("high", "High Risk"),
                            ("critical", "Critical Risk"),
                        ],
                        default="low",
                        max_length=10,
                    ),
                ),
                (
                    "recency_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "frequency_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "monetary_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "engagement_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "satisfaction_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("model_version", models.CharField(default="v1.0", max_length=20)),
                (
                    "prediction_confidence",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("feature_vector", models.JSONField(default=dict)),
                ("intervention_recommended", models.BooleanField(default=False)),
                ("intervention_applied", models.BooleanField(default=False)),
                ("intervention_type", models.CharField(blank=True, max_length=50)),
                ("intervention_date", models.DateTimeField(blank=True, null=True)),
                ("predicted_at", models.DateTimeField(auto_now=True)),
                ("next_prediction_due", models.DateTimeField(blank=True, null=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="churn_prediction",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_churn_prediction",
            },
        ),
        migrations.CreateModel(
            name="CustomerAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_orders", models.IntegerField(default=0)),
                (
                    "total_spent",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "average_order_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("first_purchase_date", models.DateTimeField(blank=True, null=True)),
                ("last_purchase_date", models.DateTimeField(blank=True, null=True)),
                ("days_since_last_purchase", models.IntegerField(default=0)),
                (
                    "purchase_frequency",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "customer_lifetime_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("preferred_categories", models.JSONField(default=list)),
                ("preferred_brands", models.JSONField(default=list)),
                ("shopping_patterns", models.JSONField(default=dict)),
                (
                    "churn_risk_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "satisfaction_score",
                    models.DecimalField(
                        blank=True, decimal_places=1, max_digits=3, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_calculated", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "segment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="customer_analytics.customersegment",
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_analytics",
            },
        ),
        migrations.CreateModel(
            name="CustomerSentimentAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "overall_sentiment",
                    models.CharField(
                        choices=[
                            ("very_positive", "Very Positive"),
                            ("positive", "Positive"),
                            ("neutral", "Neutral"),
                            ("negative", "Negative"),
                            ("very_negative", "Very Negative"),
                        ],
                        default="neutral",
                        max_length=20,
                    ),
                ),
                (
                    "sentiment_score",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.0000"), max_digits=5
                    ),
                ),
                (
                    "source_platform",
                    models.CharField(
                        choices=[
                            ("twitter", "Twitter"),
                            ("facebook", "Facebook"),
                            ("instagram", "Instagram"),
                            ("linkedin", "LinkedIn"),
                            ("reviews", "Product Reviews"),
                            ("support_chat", "Support Chat"),
                            ("email", "Email"),
                            ("survey", "Survey Response"),
                        ],
                        max_length=50,
                    ),
                ),
                ("content", models.TextField()),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("post", "Social Media Post"),
                            ("comment", "Comment"),
                            ("review", "Product Review"),
                            ("message", "Direct Message"),
                            ("mention", "Brand Mention"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("keywords_extracted", models.JSONField(default=list)),
                ("emotions_detected", models.JSONField(default=dict)),
                ("topics_identified", models.JSONField(default=list)),
                ("likes", models.IntegerField(default=0)),
                ("shares", models.IntegerField(default=0)),
                ("comments", models.IntegerField(default=0)),
                ("reach", models.IntegerField(default=0)),
                ("content_date", models.DateTimeField()),
                ("analyzed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sentiment_analysis",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_sentiment",
                "indexes": [
                    models.Index(
                        fields=["customer", "overall_sentiment"],
                        name="analytics_c_custome_c3fe86_idx",
                    ),
                    models.Index(
                        fields=["source_platform", "content_date"],
                        name="analytics_c_source__5bd380_idx",
                    ),
                    models.Index(
                        fields=["analyzed_at"], name="analytics_c_analyze_cd4b76_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerSatisfactionSurvey",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "survey_type",
                    models.CharField(
                        choices=[
                            ("nps", "Net Promoter Score"),
                            ("csat", "Customer Satisfaction"),
                            ("ces", "Customer Effort Score"),
                            ("product_review", "Product Review"),
                            ("service_feedback", "Service Feedback"),
                        ],
                        max_length=20,
                    ),
                ),
                ("score", models.IntegerField()),
                ("max_score", models.IntegerField(default=10)),
                ("feedback_text", models.TextField(blank=True)),
                ("order_id", models.CharField(blank=True, max_length=50)),
                ("product_id", models.CharField(blank=True, max_length=50)),
                ("survey_date", models.DateTimeField(auto_now_add=True)),
                ("response_time", models.IntegerField(blank=True, null=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="satisfaction_surveys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_satisfaction_surveys",
                "indexes": [
                    models.Index(
                        fields=["customer", "survey_type"],
                        name="analytics_c_custome_2c1a05_idx",
                    ),
                    models.Index(
                        fields=["survey_date"], name="analytics_c_survey__e665a8_idx"
                    ),
                    models.Index(fields=["score"], name="analytics_c_score_e749a7_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("product", "Product Recommendation"),
                            ("category", "Category Recommendation"),
                            ("brand", "Brand Recommendation"),
                            ("cross_sell", "Cross-sell"),
                            ("up_sell", "Up-sell"),
                            ("reorder", "Reorder Suggestion"),
                        ],
                        max_length=20,
                    ),
                ),
                ("recommended_items", models.JSONField(default=list)),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("algorithm_used", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("views", models.IntegerField(default=0)),
                ("clicks", models.IntegerField(default=0)),
                ("conversions", models.IntegerField(default=0)),
                (
                    "revenue_generated",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_recommendations",
                "indexes": [
                    models.Index(
                        fields=["customer", "recommendation_type"],
                        name="analytics_c_custome_9eae81_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="analytics_c_created_c6c479_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="analytics_c_is_acti_d7d4c0_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerLifecycleStage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stage",
                    models.CharField(
                        choices=[
                            ("prospect", "Prospect"),
                            ("new", "New Customer"),
                            ("active", "Active Customer"),
                            ("at_risk", "At Risk"),
                            ("dormant", "Dormant"),
                            ("reactivated", "Reactivated"),
                            ("churned", "Churned"),
                        ],
                        max_length=20,
                    ),
                ),
                ("stage_date", models.DateTimeField(auto_now_add=True)),
                (
                    "previous_stage",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("prospect", "Prospect"),
                            ("new", "New Customer"),
                            ("active", "Active Customer"),
                            ("at_risk", "At Risk"),
                            ("dormant", "Dormant"),
                            ("reactivated", "Reactivated"),
                            ("churned", "Churned"),
                        ],
                        max_length=20,
                    ),
                ),
                ("stage_duration", models.IntegerField(default=0)),
                (
                    "stage_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lifecycle_stages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_lifecycle_stages",
                "indexes": [
                    models.Index(
                        fields=["customer", "stage"],
                        name="analytics_c_custome_438509_idx",
                    ),
                    models.Index(
                        fields=["stage_date"], name="analytics_c_stage_d_089323_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerJourneyMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("journey_id", models.CharField(max_length=100)),
                (
                    "journey_type",
                    models.CharField(
                        choices=[
                            ("acquisition", "Customer Acquisition"),
                            ("onboarding", "Customer Onboarding"),
                            ("purchase", "Purchase Journey"),
                            ("support", "Support Journey"),
                            ("retention", "Retention Journey"),
                            ("reactivation", "Reactivation Journey"),
                        ],
                        max_length=50,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("abandoned", "Abandoned"),
                            ("converted", "Converted"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("total_touchpoints", models.IntegerField(default=0)),
                (
                    "conversion_value",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=10
                    ),
                ),
                ("journey_duration", models.IntegerField(default=0)),
                ("touchpoints", models.JSONField(default=list)),
                ("conversion_path", models.JSONField(default=list)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="journey_maps",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_journey_maps",
                "indexes": [
                    models.Index(
                        fields=["customer", "journey_type"],
                        name="analytics_c_custome_2fd8e2_idx",
                    ),
                    models.Index(
                        fields=["start_date"], name="analytics_c_start_d_4322ec_idx"
                    ),
                    models.Index(
                        fields=["status"], name="analytics_c_status_9e0768_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerFeedbackAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[
                            ("product_review", "Product Review"),
                            ("service_feedback", "Service Feedback"),
                            ("support_ticket", "Support Ticket"),
                            ("survey_response", "Survey Response"),
                            ("chat_transcript", "Chat Transcript"),
                            ("email_feedback", "Email Feedback"),
                        ],
                        max_length=30,
                    ),
                ),
                ("source_id", models.CharField(blank=True, max_length=100)),
                ("original_text", models.TextField()),
                ("processed_text", models.TextField(blank=True)),
                ("language", models.CharField(default="en", max_length=10)),
                (
                    "sentiment_score",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.0000"), max_digits=5
                    ),
                ),
                ("emotion_scores", models.JSONField(default=dict)),
                ("key_phrases", models.JSONField(default=list)),
                ("named_entities", models.JSONField(default=list)),
                ("topics", models.JSONField(default=list)),
                (
                    "feedback_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("product_quality", "Product Quality"),
                            ("customer_service", "Customer Service"),
                            ("shipping_delivery", "Shipping & Delivery"),
                            ("pricing", "Pricing"),
                            ("website_usability", "Website Usability"),
                            ("payment_process", "Payment Process"),
                            ("return_policy", "Return Policy"),
                            ("general", "General Feedback"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "urgency_level",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("critical", "Critical"),
                        ],
                        default="low",
                        max_length=20,
                    ),
                ),
                ("requires_response", models.BooleanField(default=False)),
                ("action_taken", models.BooleanField(default=False)),
                ("action_description", models.TextField(blank=True)),
                (
                    "analysis_confidence",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                ("model_version", models.CharField(default="v1.0", max_length=20)),
                ("feedback_date", models.DateTimeField()),
                ("analyzed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_analysis",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_feedback",
                "indexes": [
                    models.Index(
                        fields=["customer", "feedback_type"],
                        name="analytics_c_custome_8134dd_idx",
                    ),
                    models.Index(
                        fields=["feedback_category", "urgency_level"],
                        name="analytics_c_feedbac_0a2b0e_idx",
                    ),
                    models.Index(
                        fields=["feedback_date"], name="analytics_c_feedbac_0a1b39_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CustomerBehaviorEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("page_view", "Page View"),
                            ("product_view", "Product View"),
                            ("add_to_cart", "Add to Cart"),
                            ("remove_from_cart", "Remove from Cart"),
                            ("checkout_start", "Checkout Started"),
                            ("checkout_complete", "Checkout Completed"),
                            ("search", "Search"),
                            ("wishlist_add", "Added to Wishlist"),
                            ("review_submit", "Review Submitted"),
                            ("support_contact", "Support Contact"),
                        ],
                        max_length=20,
                    ),
                ),
                ("event_data", models.JSONField(default=dict)),
                ("session_id", models.CharField(blank=True, max_length=100)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("referrer", models.URLField(blank=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="behavior_events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "analytics_customer_behavior_events",
                "indexes": [
                    models.Index(
                        fields=["customer", "event_type"],
                        name="analytics_c_custome_760cf7_idx",
                    ),
                    models.Index(
                        fields=["timestamp"], name="analytics_c_timesta_a385dd_idx"
                    ),
                    models.Index(
                        fields=["session_id"], name="analytics_c_session_dcfad8_idx"
                    ),
                ],
            },
        ),
    ]
