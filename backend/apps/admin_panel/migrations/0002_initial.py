# Generated by Django 4.2.23 on 2025-08-25 06:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("admin_panel", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        ("customers", "0001_initial"),
        ("products", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("orders", "0001_initial"),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.AddField(
            model_name="ordersubscription",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="order_subscriptions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="ordersubscription",
            name="paused_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="paused_subscriptions",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="ordersearchfilter",
            name="admin_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="saved_order_filters",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderqualitycontrol",
            name="inspector",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="qc_inspections",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="ordernote",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="order_notes",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderfraudscore",
            name="reviewed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="reviewed_fraud_scores",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderescalation",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_escalations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderescalation",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_escalations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderescalation",
            name="resolved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="resolved_escalations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderdocument",
            name="generated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="generated_documents",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="orderallocation",
            name="allocated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="order_allocations",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="inventoryvaluation",
            name="calculated_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryvaluation",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="valuations",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryvaluation",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="valuations",
                to="admin_panel.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="inventorytransfer",
            name="destination_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="incoming_transfers",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventorytransfer",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transfers",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventorytransfer",
            name="received_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="received_transfers",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventorytransfer",
            name="requested_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requested_transfers",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventorytransfer",
            name="shipped_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="shipped_transfers",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventorytransfer",
            name="source_location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="outgoing_transfers",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventoryreservation",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="inventoryreservation",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reservations",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventoryreservation",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reservations",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryreservation",
            name="reserved_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reservations",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryreport",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_inventory_reports",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryreport",
            name="recipients",
            field=models.ManyToManyField(
                blank=True, related_name="inventory_reports", to="admin_panel.adminuser"
            ),
        ),
        migrations.AddField(
            model_name="inventoryoptimizationitem",
            name="optimization",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="optimization_items",
                to="admin_panel.inventoryoptimization",
            ),
        ),
        migrations.AddField(
            model_name="inventoryoptimizationitem",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="optimization_items",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryoptimization",
            name="analyzed_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="optimizations",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryoptimization",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="optimizations",
                to="admin_panel.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="inventorylocation",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="locations",
                to="admin_panel.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="inventoryitem",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="items",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventoryitem",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="inventory_items",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryitem",
            name="supplier",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.supplier",
            ),
        ),
        migrations.AddField(
            model_name="inventoryforecast",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="forecasts",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryforecast",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="admin_forecasts",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryforecast",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="admin_forecasts",
                to="admin_panel.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudititem",
            name="audit",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="audit_items",
                to="admin_panel.inventoryaudit",
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudititem",
            name="counted_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="counted_items",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudititem",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="audit_items",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudititem",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="audit_items",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudit",
            name="audit_team",
            field=models.ManyToManyField(
                related_name="audits", to="admin_panel.adminuser"
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudit",
            name="locations",
            field=models.ManyToManyField(
                blank=True, related_name="audits", to="admin_panel.inventorylocation"
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudit",
            name="products",
            field=models.ManyToManyField(
                blank=True, related_name="audits", to="products.product"
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudit",
            name="supervisor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="supervised_audits",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryaudit",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="audits",
                to="admin_panel.warehouse",
            ),
        ),
        migrations.AddField(
            model_name="inventoryalert",
            name="acknowledged_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="acknowledged_alerts",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryalert",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alerts",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventoryalert",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="inventory_alerts",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryalert",
            name="resolved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="resolved_alerts",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryadjustment",
            name="applied_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="applied_adjustments",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryadjustment",
            name="approved_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="approved_adjustments",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="inventoryadjustment",
            name="location",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="adjustments",
                to="admin_panel.inventorylocation",
            ),
        ),
        migrations.AddField(
            model_name="inventoryadjustment",
            name="product",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="adjustments",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="inventoryadjustment",
            name="requested_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requested_adjustments",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboardwidgetposition",
            name="layout",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="admin_panel.dashboardlayout",
            ),
        ),
        migrations.AddField(
            model_name="dashboardwidgetposition",
            name="widget",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="admin_panel.dashboardwidget",
            ),
        ),
        migrations.AddField(
            model_name="dashboardwidget",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_widgets",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboarduserpreference",
            name="default_layout",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.dashboardlayout",
            ),
        ),
        migrations.AddField(
            model_name="dashboarduserpreference",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dashboard_preferences",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboardusageanalytics",
            name="dashboard_layout",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.dashboardlayout",
            ),
        ),
        migrations.AddField(
            model_name="dashboardusageanalytics",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dashboard_usage",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboardusageanalytics",
            name="widget",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.dashboardwidget",
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardtemplate",
            index=models.Index(
                fields=["template_type"], name="dashboard_t_templat_4e86a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardtemplate",
            index=models.Index(
                fields=["is_active"], name="dashboard_t_is_acti_56e408_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardtemplate",
            index=models.Index(
                fields=["is_featured"], name="dashboard_t_is_feat_bad102_idx"
            ),
        ),
        migrations.AddField(
            model_name="dashboardlayout",
            name="owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dashboard_layouts",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboardlayout",
            name="shared_with_users",
            field=models.ManyToManyField(
                blank=True, related_name="shared_layouts", to="admin_panel.adminuser"
            ),
        ),
        migrations.AddField(
            model_name="dashboardlayout",
            name="widgets",
            field=models.ManyToManyField(
                through="admin_panel.DashboardWidgetPosition",
                to="admin_panel.dashboardwidget",
            ),
        ),
        migrations.AddField(
            model_name="dashboardexport",
            name="dashboard_layout",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="admin_panel.dashboardlayout",
            ),
        ),
        migrations.AddField(
            model_name="dashboardexport",
            name="exported_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="dashboard_exports",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboarddatasource",
            name="allowed_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="accessible_data_sources",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboarddatasource",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="data_sources",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboardalert",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_alerts",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="dashboardalert",
            name="recipients",
            field=models.ManyToManyField(
                blank=True, related_name="dashboard_alerts", to="admin_panel.adminuser"
            ),
        ),
        migrations.AddField(
            model_name="customerwinbackcampaign",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="winback_campaigns",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticketresponse",
            name="admin_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticketresponse",
            name="customer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticketresponse",
            name="ticket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="responses",
                to="admin_panel.customersupportticket",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticket",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_tickets",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticket",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="support_tickets",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticket",
            name="related_order",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="support_tickets",
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="customersupportticket",
            name="related_product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="customersocialmediaintegration",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="social_media_accounts",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerservicelevelagreement",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="sla_tracking",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerservicelevelagreement",
            name="related_complaint",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="admin_panel.customercomplaintmanagement",
            ),
        ),
        migrations.AddField(
            model_name="customerservicelevelagreement",
            name="related_order",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="customerservicelevelagreement",
            name="related_ticket",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="admin_panel.customersupportticket",
            ),
        ),
        migrations.AddField(
            model_name="customersegmentmembership",
            name="assigned_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customersegmentmembership",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="segment_memberships",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customersegmentmembership",
            name="segment",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="memberships",
                to="admin_panel.customersegment",
            ),
        ),
        migrations.AddField(
            model_name="customersegment",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customersatisfactionsurvey",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="satisfaction_surveys",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customersatisfactionsurvey",
            name="related_order",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="customersatisfactionsurvey",
            name="related_ticket",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.customersupportticket",
            ),
        ),
        migrations.AddField(
            model_name="customerriskassessment",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="risk_assessment",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerreferralprogram",
            name="completing_order",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="customerreferralprogram",
            name="referred_customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="referrals_received",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerreferralprogram",
            name="referrer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="referrals_made",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerpreferencecenter",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="preference_center",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerpaymentmethod",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payment_methods",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerloyaltytransaction",
            name="loyalty_program",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="transactions",
                to="admin_panel.customerloyaltyprogram",
            ),
        ),
        migrations.AddField(
            model_name="customerloyaltytransaction",
            name="processed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customerloyaltytransaction",
            name="related_order",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="customerloyaltyprogram",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="loyalty_program",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerlifecyclestage",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lifecycle_stage",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerlifecyclehistory",
            name="changed_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customerlifecyclehistory",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="lifecycle_history",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customerjourneymapping",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="journey_touchpoints",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customergdprcompliance",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="gdpr_compliance",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customercomplaintmanagement",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customercomplaintmanagement",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="complaints",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customercomplaintmanagement",
            name="related_order",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="orders.order",
            ),
        ),
        migrations.AddField(
            model_name="customercomplaintmanagement",
            name="related_product",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="customercommunicationhistory",
            name="customer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="communication_history",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customercommunicationhistory",
            name="sender",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="customerchurnprediction",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="churn_prediction",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customeranalytics",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="admin_analytics",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="customeraccounthealthscore",
            name="customer",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="health_score",
                to="customers.customerprofile",
            ),
        ),
        migrations.AddField(
            model_name="chartversion",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="versions",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartversion",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="charttemplate",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="chartshare",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shares",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartshare",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="chartperformancemetric",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="performance_metrics",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartexport",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="exports",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartexport",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="chartdatacache",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="data_cache",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartcomment",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="comments",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartcomment",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="chartcomment",
            name="parent",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="admin_panel.chartcomment",
            ),
        ),
        migrations.AddField(
            model_name="chartannotation",
            name="chart",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="annotations",
                to="admin_panel.chart",
            ),
        ),
        migrations.AddField(
            model_name="chartannotation",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="chart",
            name="allowed_users",
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="chart",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_charts",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="chart",
            name="template",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.charttemplate",
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_admins",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="admin_user_set",
                related_query_name="admin_user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="permissions",
            field=models.ManyToManyField(
                blank=True, related_name="admin_users", to="admin_panel.adminpermission"
            ),
        ),
        migrations.AddField(
            model_name="adminuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="admin_user_set",
                related_query_name="admin_user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.AddField(
            model_name="adminsession",
            name="admin_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="admin_sessions",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminrole",
            name="parent_role",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="child_roles",
                to="admin_panel.adminrole",
            ),
        ),
        migrations.AddField(
            model_name="adminrole",
            name="permissions",
            field=models.ManyToManyField(
                blank=True, related_name="roles", to="admin_panel.adminpermission"
            ),
        ),
        migrations.AddField(
            model_name="adminreport",
            name="created_by",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="created_reports",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminreport",
            name="recipients",
            field=models.ManyToManyField(
                blank=True,
                related_name="subscribed_reports",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminpermission",
            name="depends_on",
            field=models.ManyToManyField(
                blank=True, related_name="dependents", to="admin_panel.adminpermission"
            ),
        ),
        migrations.AddField(
            model_name="adminnotification",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="adminnotification",
            name="recipient",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="notifications",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminnotification",
            name="sender",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="sent_notifications",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="adminloginattempt",
            name="admin_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="login_attempts",
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="admin_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="admin_panel.adminuser",
            ),
        ),
        migrations.AddField(
            model_name="activitylog",
            name="content_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddIndex(
            model_name="systemsettings",
            index=models.Index(fields=["key"], name="system_sett_key_052b30_idx"),
        ),
        migrations.AddIndex(
            model_name="systemsettings",
            index=models.Index(
                fields=["category"], name="system_sett_categor_db5b74_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemsettings",
            index=models.Index(
                fields=["is_public"], name="system_sett_is_publ_c2e919_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="systemsettings",
            index=models.Index(
                fields=["last_modified_by"], name="system_sett_last_mo_232272_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(
                fields=["supplier_code"], name="supplier_pr_supplie_36602b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(fields=["name"], name="supplier_pr_name_bb72d4_idx"),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(fields=["status"], name="supplier_pr_status_5aed97_idx"),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(
                fields=["supplier_type"], name="supplier_pr_supplie_8d6551_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(
                fields=["risk_level"], name="supplier_pr_risk_le_17fda4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(
                fields=["is_preferred"], name="supplier_pr_is_pref_e4169f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(
                fields=["overall_rating"], name="supplier_pr_overall_1ebf9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierprofile",
            index=models.Index(
                fields=["created_at"], name="supplier_pr_created_62b230_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierperformancemetric",
            index=models.Index(
                fields=["supplier", "metric_type", "measurement_date"],
                name="supplier_pe_supplie_e00e58_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="supplierperformancemetric",
            index=models.Index(
                fields=["measurement_date"], name="supplier_pe_measure_255336_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierpayment",
            index=models.Index(
                fields=["payment_number"], name="supplier_pa_payment_f2aa4e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierpayment",
            index=models.Index(
                fields=["supplier", "status"], name="supplier_pa_supplie_7b3476_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierpayment",
            index=models.Index(
                fields=["due_date"], name="supplier_pa_due_dat_64873a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="supplierpayment",
            index=models.Index(fields=["status"], name="supplier_pa_status_7c3326_idx"),
        ),
        migrations.AddIndex(
            model_name="suppliercontract",
            index=models.Index(
                fields=["contract_number"], name="supplier_co_contrac_dcbdae_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suppliercontract",
            index=models.Index(
                fields=["supplier", "status"], name="supplier_co_supplie_2acb44_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suppliercontract",
            index=models.Index(
                fields=["end_date"], name="supplier_co_end_dat_fe65a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="suppliercontract",
            index=models.Index(
                fields=["next_review_date"], name="supplier_co_next_re_a79b33_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="suppliercontact",
            unique_together={("supplier", "contact_type", "email")},
        ),
        migrations.AlterUniqueTogether(
            name="purchaseorderitem",
            unique_together={("purchase_order", "line_number")},
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["po_number"], name="purchase_or_po_numb_656941_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["supplier", "status"], name="purchase_or_supplie_8a71bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["status", "created_at"], name="purchase_or_status_c9fac8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["required_date"], name="purchase_or_require_27c517_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["created_by"], name="purchase_or_created_0d8709_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productversion",
            unique_together={("product", "version_number")},
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(
                fields=["product", "is_active"], name="product_var_product_b96575_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(fields=["sku"], name="product_var_sku_3a95f0_idx"),
        ),
        migrations.AddIndex(
            model_name="productvariant",
            index=models.Index(
                fields=["is_default"], name="product_var_is_defa_3d8bd4_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="productvariant",
            constraint=models.UniqueConstraint(
                condition=models.Q(("is_default", True)),
                fields=("product",),
                name="unique_default_variant_per_product",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productsyndication",
            unique_together={("product", "channel_name")},
        ),
        migrations.AlterUniqueTogether(
            name="productrelationship",
            unique_together={("source_product", "target_product", "relationship_type")},
        ),
        migrations.AlterUniqueTogether(
            name="productbundleitem",
            unique_together={("bundle", "product", "variant")},
        ),
        migrations.AlterUniqueTogether(
            name="productattributevalue",
            unique_together={("attribute", "value")},
        ),
        migrations.AlterUniqueTogether(
            name="ordersearchfilter",
            unique_together={("name", "admin_user")},
        ),
        migrations.AddIndex(
            model_name="inventoryvaluation",
            index=models.Index(
                fields=["product", "warehouse"], name="inventory_v_product_17d3ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryvaluation",
            index=models.Index(
                fields=["valuation_date"], name="inventory_v_valuati_acbb96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryvaluation",
            index=models.Index(
                fields=["costing_method"], name="inventory_v_costing_ee646b_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventoryvaluation",
            unique_together={
                ("product", "warehouse", "valuation_date", "costing_method")
            },
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(
                fields=["transfer_number"], name="inventory_t_transfe_1f34ca_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(
                fields=["source_location", "destination_location"],
                name="inventory_t_source__8fa263_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(fields=["status"], name="inventory_t_status_a9411f_idx"),
        ),
        migrations.AddIndex(
            model_name="inventorytransfer",
            index=models.Index(
                fields=["requested_date"], name="inventory_t_request_6cef97_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreservation",
            index=models.Index(
                fields=["reservation_number"], name="inventory_r_reserva_1de694_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreservation",
            index=models.Index(
                fields=["product", "location"], name="inventory_r_product_407a96_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreservation",
            index=models.Index(fields=["status"], name="inventory_r_status_c8c2fd_idx"),
        ),
        migrations.AddIndex(
            model_name="inventoryreservation",
            index=models.Index(
                fields=["expiry_date"], name="inventory_r_expiry__e4b265_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreservation",
            index=models.Index(
                fields=["priority"], name="inventory_r_priorit_360eba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreport",
            index=models.Index(
                fields=["report_number"], name="inventory_r_report__a8483a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreport",
            index=models.Index(
                fields=["report_type"], name="inventory_r_report__c34fc4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreport",
            index=models.Index(
                fields=["schedule_type"], name="inventory_r_schedul_e82dde_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreport",
            index=models.Index(
                fields=["next_run"], name="inventory_r_next_ru_f896ec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryreport",
            index=models.Index(
                fields=["is_active"], name="inventory_r_is_acti_f90ead_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimizationitem",
            index=models.Index(
                fields=["optimization", "abc_category"],
                name="inventory_o_optimiz_0c8946_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimizationitem",
            index=models.Index(
                fields=["turnover_rate"], name="inventory_o_turnove_86732e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimizationitem",
            index=models.Index(
                fields=["is_slow_moving"], name="inventory_o_is_slow_942d27_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimizationitem",
            index=models.Index(
                fields=["is_dead_stock"], name="inventory_o_is_dead_732cbd_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventoryoptimizationitem",
            unique_together={("optimization", "product")},
        ),
        migrations.AddIndex(
            model_name="inventoryoptimization",
            index=models.Index(
                fields=["analysis_number"], name="inventory_o_analysi_5196be_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimization",
            index=models.Index(
                fields=["analysis_type"], name="inventory_o_analysi_e9d659_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimization",
            index=models.Index(
                fields=["analysis_date"], name="inventory_o_analysi_b2cb1f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryoptimization",
            index=models.Index(
                fields=["warehouse"], name="inventory_o_warehou_a63583_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorylocation",
            index=models.Index(
                fields=["warehouse", "location_code"],
                name="inventory_l_warehou_c86cba_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="inventorylocation",
            index=models.Index(
                fields=["location_type"], name="inventory_l_locatio_5fbc5e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventorylocation",
            index=models.Index(
                fields=["is_active", "is_blocked"],
                name="inventory_l_is_acti_039a47_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventorylocation",
            unique_together={("warehouse", "zone", "aisle", "shelf", "bin")},
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["product", "location"], name="inventory_i_product_213a86_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["serial_number"], name="inventory_i_serial__4ce2b9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["lot_number"], name="inventory_i_lot_num_afe93f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["batch_number"], name="inventory_i_batch_n_2431d0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["condition"], name="inventory_i_conditi_7fc3a0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["expiry_date"], name="inventory_i_expiry__6f5da2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryitem",
            index=models.Index(
                fields=["is_available"], name="inventory_i_is_avai_d08213_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryforecast",
            index=models.Index(
                fields=["forecast_number"], name="inventory_f_forecas_7ac9b4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryforecast",
            index=models.Index(
                fields=["product", "warehouse"], name="inventory_f_product_281754_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryforecast",
            index=models.Index(
                fields=["forecast_date"], name="inventory_f_forecas_ba1313_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryforecast",
            index=models.Index(
                fields=["forecast_type"], name="inventory_f_forecas_82d107_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventoryforecast",
            unique_together={
                ("product", "warehouse", "forecast_date", "forecast_type")
            },
        ),
        migrations.AddIndex(
            model_name="inventoryaudititem",
            index=models.Index(
                fields=["audit", "product"], name="inventory_a_audit_i_963588_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryaudititem",
            index=models.Index(
                fields=["variance_quantity"], name="inventory_a_varianc_143822_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryaudititem",
            index=models.Index(
                fields=["count_date"], name="inventory_a_count_d_0d2438_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="inventoryaudititem",
            unique_together={("audit", "product", "location")},
        ),
        migrations.AddIndex(
            model_name="inventoryaudit",
            index=models.Index(
                fields=["audit_number"], name="inventory_a_audit_n_48ddd4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryaudit",
            index=models.Index(
                fields=["audit_type"], name="inventory_a_audit_t_6b1342_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryaudit",
            index=models.Index(fields=["status"], name="inventory_a_status_8ec8a9_idx"),
        ),
        migrations.AddIndex(
            model_name="inventoryaudit",
            index=models.Index(
                fields=["planned_date"], name="inventory_a_planned_de93fa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryaudit",
            index=models.Index(
                fields=["warehouse"], name="inventory_a_warehou_5ffbbc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["alert_number"], name="inventory_a_alert_n_5e11e4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["product", "location"], name="inventory_a_product_36790b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["alert_type"], name="inventory_a_alert_t_dc5c59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["severity"], name="inventory_a_severit_e89abe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(fields=["status"], name="inventory_a_status_d3a557_idx"),
        ),
        migrations.AddIndex(
            model_name="inventoryalert",
            index=models.Index(
                fields=["triggered_date"], name="inventory_a_trigger_31207b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(
                fields=["adjustment_number"], name="inventory_a_adjustm_d0c48a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(
                fields=["product", "location"], name="inventory_a_product_b4e855_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(fields=["status"], name="inventory_a_status_cf87c1_idx"),
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(
                fields=["requested_date"], name="inventory_a_request_ef4cff_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="inventoryadjustment",
            index=models.Index(
                fields=["adjustment_type"], name="inventory_a_adjustm_b52179_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="dashboardwidgetposition",
            unique_together={("layout", "widget")},
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(
                fields=["widget_type"], name="dashboard_w_widget__47e2e7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(
                fields=["data_source"], name="dashboard_w_data_so_a8b0e6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(
                fields=["is_active"], name="dashboard_w_is_acti_443f28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardwidget",
            index=models.Index(
                fields=["created_by"], name="dashboard_w_created_676603_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardusageanalytics",
            index=models.Index(
                fields=["user", "created_at"], name="dashboard_u_user_id_7912d3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardusageanalytics",
            index=models.Index(
                fields=["action", "created_at"], name="dashboard_u_action_26fd49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardusageanalytics",
            index=models.Index(
                fields=["dashboard_layout"], name="dashboard_u_dashboa_bfbe28_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardusageanalytics",
            index=models.Index(
                fields=["widget"], name="dashboard_u_widget__6ddf44_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardlayout",
            index=models.Index(fields=["owner"], name="dashboard_l_owner_i_734023_idx"),
        ),
        migrations.AddIndex(
            model_name="dashboardlayout",
            index=models.Index(
                fields=["is_template"], name="dashboard_l_is_temp_4e0cb7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardlayout",
            index=models.Index(
                fields=["is_default_for_role"], name="dashboard_l_is_defa_7d5f26_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardlayout",
            index=models.Index(
                fields=["is_active"], name="dashboard_l_is_acti_af789f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardexport",
            index=models.Index(
                fields=["export_type"], name="dashboard_e_export__35f352_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardexport",
            index=models.Index(fields=["status"], name="dashboard_e_status_6a9993_idx"),
        ),
        migrations.AddIndex(
            model_name="dashboardexport",
            index=models.Index(
                fields=["exported_by"], name="dashboard_e_exporte_69c276_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardexport",
            index=models.Index(
                fields=["access_token"], name="dashboard_e_access__45ad8e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardexport",
            index=models.Index(
                fields=["expires_at"], name="dashboard_e_expires_3af78a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboarddatasource",
            index=models.Index(
                fields=["source_type"], name="dashboard_d_source__c24783_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboarddatasource",
            index=models.Index(
                fields=["is_active"], name="dashboard_d_is_acti_7cdf83_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboarddatasource",
            index=models.Index(
                fields=["last_sync"], name="dashboard_d_last_sy_74bb0e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboarddatasource",
            index=models.Index(
                fields=["created_by"], name="dashboard_d_created_82a60c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardalert",
            index=models.Index(
                fields=["alert_type"], name="dashboard_a_alert_t_58b2cd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardalert",
            index=models.Index(
                fields=["severity"], name="dashboard_a_severit_c62edf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardalert",
            index=models.Index(fields=["status"], name="dashboard_a_status_9c8ef6_idx"),
        ),
        migrations.AddIndex(
            model_name="dashboardalert",
            index=models.Index(
                fields=["is_enabled"], name="dashboard_a_is_enab_457cd3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="dashboardalert",
            index=models.Index(
                fields=["last_triggered"], name="dashboard_a_last_tr_664995_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerwinbackcampaign",
            index=models.Index(
                fields=["customer", "status"], name="customer_wi_custome_b5cada_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerwinbackcampaign",
            index=models.Index(
                fields=["trigger_type"], name="customer_wi_trigger_1859e1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerwinbackcampaign",
            index=models.Index(
                fields=["scheduled_date"], name="customer_wi_schedul_ba45f8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticketresponse",
            index=models.Index(
                fields=["ticket", "created_at"], name="customer_su_ticket__bb1427_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticketresponse",
            index=models.Index(
                fields=["is_internal"], name="customer_su_is_inte_9af404_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticket",
            index=models.Index(
                fields=["ticket_number"], name="customer_su_ticket__4bb5ea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticket",
            index=models.Index(
                fields=["customer", "status"], name="customer_su_custome_966399_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticket",
            index=models.Index(
                fields=["status", "priority"], name="customer_su_status_4b050e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticket",
            index=models.Index(
                fields=["assigned_to", "status"], name="customer_su_assigne_fea288_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticket",
            index=models.Index(
                fields=["sla_due_date"], name="customer_su_sla_due_f2c04a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersupportticket",
            index=models.Index(
                fields=["created_at"], name="customer_su_created_53b6ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersocialmediaintegration",
            index=models.Index(
                fields=["platform"], name="customer_so_platfor_a1d30e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersocialmediaintegration",
            index=models.Index(
                fields=["customer", "platform"], name="customer_so_custome_303a38_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersocialmediaintegration",
            index=models.Index(
                fields=["sentiment_score"], name="customer_so_sentime_6e0b5d_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customersocialmediaintegration",
            unique_together={("customer", "platform", "username")},
        ),
        migrations.AddIndex(
            model_name="customerservicelevelagreement",
            index=models.Index(
                fields=["customer", "sla_type"], name="customer_se_custome_888ae6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerservicelevelagreement",
            index=models.Index(
                fields=["is_breached"], name="customer_se_is_brea_1ff6f2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerservicelevelagreement",
            index=models.Index(
                fields=["target_time"], name="customer_se_target__4304b6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerservicelevelagreement",
            index=models.Index(
                fields=["completion_time"], name="customer_se_complet_9a83f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersegmentmembership",
            index=models.Index(
                fields=["customer", "is_active"], name="customer_se_custome_71ac7f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersegmentmembership",
            index=models.Index(
                fields=["segment", "is_active"], name="customer_se_segment_b25533_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersegmentmembership",
            index=models.Index(
                fields=["joined_at"], name="customer_se_joined__7bc5e5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="customersegmentmembership",
            unique_together={("customer", "segment")},
        ),
        migrations.AddIndex(
            model_name="customersegment",
            index=models.Index(
                fields=["segment_type"], name="customer_se_segment_018755_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersegment",
            index=models.Index(
                fields=["is_active"], name="customer_se_is_acti_6c5705_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersegment",
            index=models.Index(
                fields=["priority"], name="customer_se_priorit_59a79c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersegment",
            index=models.Index(
                fields=["last_calculated"], name="customer_se_last_ca_e24301_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersatisfactionsurvey",
            index=models.Index(
                fields=["customer", "survey_type"],
                name="customer_sa_custome_d54450_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customersatisfactionsurvey",
            index=models.Index(
                fields=["is_completed"], name="customer_sa_is_comp_632614_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersatisfactionsurvey",
            index=models.Index(
                fields=["nps_score"], name="customer_sa_nps_sco_1b0a85_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customersatisfactionsurvey",
            index=models.Index(
                fields=["sent_at"], name="customer_sa_sent_at_ba3839_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerriskassessment",
            index=models.Index(
                fields=["overall_risk_level"], name="customer_ri_overall_c01856_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerriskassessment",
            index=models.Index(
                fields=["fraud_risk_score"], name="customer_ri_fraud_r_48ccf1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerriskassessment",
            index=models.Index(
                fields=["manual_review_required"], name="customer_ri_manual__fd11d6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerriskassessment",
            index=models.Index(
                fields=["last_assessed"], name="customer_ri_last_as_a3ff6c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerreferralprogram",
            index=models.Index(
                fields=["referral_code"], name="customer_re_referra_655c38_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerreferralprogram",
            index=models.Index(
                fields=["referrer", "status"], name="customer_re_referre_e802ad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerreferralprogram",
            index=models.Index(fields=["status"], name="customer_re_status_5dc147_idx"),
        ),
        migrations.AddIndex(
            model_name="customerpreferencecenter",
            index=models.Index(
                fields=["email_marketing"], name="customer_pr_email_m_4db92d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpreferencecenter",
            index=models.Index(
                fields=["sms_marketing"], name="customer_pr_sms_mar_00921e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpreferencecenter",
            index=models.Index(
                fields=["last_updated"], name="customer_pr_last_up_3f5cba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpaymentmethod",
            index=models.Index(
                fields=["customer", "is_active"], name="customer_pa_custome_a7f946_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerpaymentmethod",
            index=models.Index(fields=["token"], name="customer_pa_token_f4b07f_idx"),
        ),
        migrations.AddIndex(
            model_name="customerpaymentmethod",
            index=models.Index(
                fields=["is_default"], name="customer_pa_is_defa_a214d0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerloyaltytransaction",
            index=models.Index(
                fields=["loyalty_program", "created_at"],
                name="customer_lo_loyalty_464199_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customerloyaltytransaction",
            index=models.Index(
                fields=["transaction_type"], name="customer_lo_transac_64d945_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerloyaltyprogram",
            index=models.Index(
                fields=["current_tier"], name="customer_lo_current_28651c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerloyaltyprogram",
            index=models.Index(
                fields=["current_points"], name="customer_lo_current_5f42a5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerloyaltyprogram",
            index=models.Index(
                fields=["is_active"], name="customer_lo_is_acti_f103d1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerlifecyclestage",
            index=models.Index(
                fields=["current_stage"], name="customer_li_current_a12c59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerlifecyclestage",
            index=models.Index(
                fields=["churn_probability"], name="customer_li_churn_p_4647d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerlifecyclestage",
            index=models.Index(
                fields=["engagement_score"], name="customer_li_engagem_2f66e8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerlifecyclestage",
            index=models.Index(
                fields=["stage_entry_date"], name="customer_li_stage_e_324870_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerlifecyclehistory",
            index=models.Index(
                fields=["customer", "created_at"], name="customer_li_custome_1a1eea_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerlifecyclehistory",
            index=models.Index(
                fields=["to_stage", "created_at"], name="customer_li_to_stag_3b1ad7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerjourneymapping",
            index=models.Index(
                fields=["customer", "created_at"], name="customer_jo_custome_d05547_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerjourneymapping",
            index=models.Index(
                fields=["touchpoint", "created_at"],
                name="customer_jo_touchpo_3d2f1e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customerjourneymapping",
            index=models.Index(
                fields=["session_id"], name="customer_jo_session_6da72a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerjourneymapping",
            index=models.Index(
                fields=["led_to_conversion"], name="customer_jo_led_to__fea362_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customergdprcompliance",
            index=models.Index(
                fields=["deletion_requested"], name="customer_gd_deletio_e30258_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customergdprcompliance",
            index=models.Index(
                fields=["data_export_requested"], name="customer_gd_data_ex_1a57f5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customergdprcompliance",
            index=models.Index(
                fields=["marketing_consent"], name="customer_gd_marketi_fec586_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercomplaintmanagement",
            index=models.Index(
                fields=["complaint_number"], name="customer_co_complai_7a08ad_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercomplaintmanagement",
            index=models.Index(
                fields=["customer", "status"], name="customer_co_custome_be00e2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercomplaintmanagement",
            index=models.Index(
                fields=["status", "severity"], name="customer_co_status_5c3497_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercomplaintmanagement",
            index=models.Index(
                fields=["assigned_to"], name="customer_co_assigne_279dd8_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercomplaintmanagement",
            index=models.Index(
                fields=["sla_due_date"], name="customer_co_sla_due_6ad3ba_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercommunicationhistory",
            index=models.Index(
                fields=["customer", "sent_at"], name="customer_co_custome_3cacf1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customercommunicationhistory",
            index=models.Index(
                fields=["communication_type", "sent_at"],
                name="customer_co_communi_e54c41_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="customercommunicationhistory",
            index=models.Index(fields=["status"], name="customer_co_status_34d461_idx"),
        ),
        migrations.AddIndex(
            model_name="customercommunicationhistory",
            index=models.Index(
                fields=["campaign_id"], name="customer_co_campaig_bc9a49_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerchurnprediction",
            index=models.Index(
                fields=["churn_probability"], name="customer_ch_churn_p_3bfdbf_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerchurnprediction",
            index=models.Index(
                fields=["churn_risk_level"], name="customer_ch_churn_r_61a935_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerchurnprediction",
            index=models.Index(
                fields=["predicted_churn_date"], name="customer_ch_predict_f5f799_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerchurnprediction",
            index=models.Index(
                fields=["intervention_priority"], name="customer_ch_interve_a448f1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customerchurnprediction",
            index=models.Index(
                fields=["last_updated"], name="customer_ch_last_up_17ac07_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeranalytics",
            index=models.Index(
                fields=["lifetime_value"], name="customer_an_lifetim_301d77_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeranalytics",
            index=models.Index(
                fields=["churn_risk_score"], name="customer_an_churn_r_00e00d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeranalytics",
            index=models.Index(
                fields=["engagement_score"], name="customer_an_engagem_adafbe_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeranalytics",
            index=models.Index(
                fields=["loyalty_score"], name="customer_an_loyalty_60c117_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeranalytics",
            index=models.Index(
                fields=["last_calculated"], name="customer_an_last_ca_92fe7d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeraccounthealthscore",
            index=models.Index(
                fields=["overall_score"], name="customer_ac_overall_cc63eb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeraccounthealthscore",
            index=models.Index(
                fields=["health_level"], name="customer_ac_health__d34cf0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeraccounthealthscore",
            index=models.Index(
                fields=["churn_risk"], name="customer_ac_churn_r_3f7129_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customeraccounthealthscore",
            index=models.Index(
                fields=["last_calculated"], name="customer_ac_last_ca_29a5d5_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="chartversion",
            unique_together={("chart", "version_number")},
        ),
        migrations.AddIndex(
            model_name="chartperformancemetric",
            index=models.Index(
                fields=["chart", "timestamp"], name="admin_chart_chart_i_9307f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="chartdatacache",
            index=models.Index(
                fields=["cache_key", "expires_at"],
                name="admin_chart_cache_k_85a07e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(fields=["email"], name="admin_users_email_91b518_idx"),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(fields=["role"], name="admin_users_role_6b3116_idx"),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(
                fields=["department"], name="admin_users_departm_50df59_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(
                fields=["is_admin_active"], name="admin_users_is_admi_402870_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(
                fields=["last_login_ip"], name="admin_users_last_lo_dbd3e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminuser",
            index=models.Index(
                fields=["created_at"], name="admin_users_created_9e09db_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["session_key"], name="admin_sessi_session_8e7b1f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["admin_user", "is_active"],
                name="admin_sessi_admin_u_b05938_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["ip_address"], name="admin_sessi_ip_addr_f51801_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["last_activity"], name="admin_sessi_last_ac_36ae03_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["expires_at"], name="admin_sessi_expires_3c8288_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminsession",
            index=models.Index(
                fields=["is_suspicious"], name="admin_sessi_is_susp_83379e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminrole",
            index=models.Index(fields=["name"], name="admin_roles_name_9fb902_idx"),
        ),
        migrations.AddIndex(
            model_name="adminrole",
            index=models.Index(fields=["level"], name="admin_roles_level_d2e32b_idx"),
        ),
        migrations.AddIndex(
            model_name="adminrole",
            index=models.Index(
                fields=["is_active"], name="admin_roles_is_acti_e1f55d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminreport",
            index=models.Index(
                fields=["report_type"], name="admin_repor_report__a07a9a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminreport",
            index=models.Index(
                fields=["schedule_type"], name="admin_repor_schedul_7ddb02_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminreport",
            index=models.Index(
                fields=["next_run"], name="admin_repor_next_ru_41d7f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminreport",
            index=models.Index(
                fields=["is_active"], name="admin_repor_is_acti_3fd55d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminreport",
            index=models.Index(
                fields=["created_by"], name="admin_repor_created_b29d20_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminpermission",
            index=models.Index(
                fields=["codename"], name="admin_permi_codenam_2a994d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminpermission",
            index=models.Index(fields=["module"], name="admin_permi_module_d718cc_idx"),
        ),
        migrations.AddIndex(
            model_name="adminpermission",
            index=models.Index(fields=["action"], name="admin_permi_action_6fc517_idx"),
        ),
        migrations.AddIndex(
            model_name="adminpermission",
            index=models.Index(
                fields=["is_active"], name="admin_permi_is_acti_590565_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminpermission",
            index=models.Index(
                fields=["is_sensitive"], name="admin_permi_is_sens_4411e3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminnotification",
            index=models.Index(
                fields=["recipient", "is_read"], name="admin_notif_recipie_179dfa_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminnotification",
            index=models.Index(
                fields=["notification_type"], name="admin_notif_notific_f1a152_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminnotification",
            index=models.Index(
                fields=["priority"], name="admin_notif_priorit_a1ff94_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminnotification",
            index=models.Index(
                fields=["scheduled_for"], name="admin_notif_schedul_c2c8ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminnotification",
            index=models.Index(
                fields=["expires_at"], name="admin_notif_expires_95ee75_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminnotification",
            index=models.Index(
                fields=["created_at"], name="admin_notif_created_8e86bb_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminloginattempt",
            index=models.Index(
                fields=["username", "created_at"], name="admin_login_usernam_1a1a13_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminloginattempt",
            index=models.Index(
                fields=["ip_address", "created_at"],
                name="admin_login_ip_addr_292799_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="adminloginattempt",
            index=models.Index(
                fields=["is_successful"], name="admin_login_is_succ_07d764_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminloginattempt",
            index=models.Index(
                fields=["is_suspicious"], name="admin_login_is_susp_987738_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="adminloginattempt",
            index=models.Index(
                fields=["admin_user", "created_at"],
                name="admin_login_admin_u_3aa89b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["admin_user", "created_at"],
                name="activity_lo_admin_u_eeaa66_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["action", "created_at"], name="activity_lo_action_0f3584_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["ip_address", "created_at"],
                name="activity_lo_ip_addr_4fb53a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="activity_lo_content_edc5bf_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["module", "created_at"], name="activity_lo_module_b6aeec_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["severity", "created_at"], name="activity_lo_severit_5f4b9b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["is_successful"], name="activity_lo_is_succ_af506e_idx"
            ),
        ),
    ]
